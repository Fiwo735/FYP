// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _transpose_2d_ap_fixed_sa_transpose_config0_s_HH_
#define _transpose_2d_ap_fixed_sa_transpose_config0_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct transpose_2d_ap_fixed_sa_transpose_config0_s : public sc_module {
    // Port declarations 99
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<35> > data_0_0_V_read;
    sc_in< sc_lv<35> > data_0_1_V_read;
    sc_in< sc_lv<35> > data_1_0_V_read;
    sc_in< sc_lv<35> > data_1_1_V_read;
    sc_in< sc_lv<35> > data_2_0_V_read;
    sc_in< sc_lv<35> > data_2_1_V_read;
    sc_in< sc_lv<35> > data_3_0_V_read;
    sc_in< sc_lv<35> > data_3_1_V_read;
    sc_in< sc_lv<35> > data_4_0_V_read;
    sc_in< sc_lv<35> > data_4_1_V_read;
    sc_in< sc_lv<35> > data_5_0_V_read;
    sc_in< sc_lv<35> > data_5_1_V_read;
    sc_in< sc_lv<35> > data_6_0_V_read;
    sc_in< sc_lv<35> > data_6_1_V_read;
    sc_in< sc_lv<35> > data_7_0_V_read;
    sc_in< sc_lv<35> > data_7_1_V_read;
    sc_in< sc_lv<35> > data_8_0_V_read;
    sc_in< sc_lv<35> > data_8_1_V_read;
    sc_in< sc_lv<35> > data_9_0_V_read;
    sc_in< sc_lv<35> > data_9_1_V_read;
    sc_in< sc_lv<35> > data_10_0_V_read;
    sc_in< sc_lv<35> > data_10_1_V_read;
    sc_in< sc_lv<35> > data_11_0_V_read;
    sc_in< sc_lv<35> > data_11_1_V_read;
    sc_in< sc_lv<35> > data_12_0_V_read;
    sc_in< sc_lv<35> > data_12_1_V_read;
    sc_in< sc_lv<35> > data_13_0_V_read;
    sc_in< sc_lv<35> > data_13_1_V_read;
    sc_in< sc_lv<35> > data_14_0_V_read;
    sc_in< sc_lv<35> > data_14_1_V_read;
    sc_in< sc_lv<35> > data_15_0_V_read;
    sc_in< sc_lv<35> > data_15_1_V_read;
    sc_in< sc_lv<1> > data_V_offset;
    sc_in< sc_lv<35> > data_t_0_0_V_read;
    sc_in< sc_lv<35> > data_t_0_1_V_read;
    sc_in< sc_lv<35> > data_t_1_0_V_read;
    sc_in< sc_lv<35> > data_t_1_1_V_read;
    sc_in< sc_lv<35> > data_t_2_0_V_read;
    sc_in< sc_lv<35> > data_t_2_1_V_read;
    sc_in< sc_lv<35> > data_t_3_0_V_read;
    sc_in< sc_lv<35> > data_t_3_1_V_read;
    sc_in< sc_lv<35> > data_t_4_0_V_read;
    sc_in< sc_lv<35> > data_t_4_1_V_read;
    sc_in< sc_lv<35> > data_t_5_0_V_read;
    sc_in< sc_lv<35> > data_t_5_1_V_read;
    sc_in< sc_lv<35> > data_t_6_0_V_read;
    sc_in< sc_lv<35> > data_t_6_1_V_read;
    sc_in< sc_lv<35> > data_t_7_0_V_read;
    sc_in< sc_lv<35> > data_t_7_1_V_read;
    sc_in< sc_lv<35> > data_t_8_0_V_read;
    sc_in< sc_lv<35> > data_t_8_1_V_read;
    sc_in< sc_lv<35> > data_t_9_0_V_read;
    sc_in< sc_lv<35> > data_t_9_1_V_read;
    sc_in< sc_lv<35> > data_t_10_0_V_read;
    sc_in< sc_lv<35> > data_t_10_1_V_read;
    sc_in< sc_lv<35> > data_t_11_0_V_read;
    sc_in< sc_lv<35> > data_t_11_1_V_read;
    sc_in< sc_lv<35> > data_t_12_0_V_read;
    sc_in< sc_lv<35> > data_t_12_1_V_read;
    sc_in< sc_lv<35> > data_t_13_0_V_read;
    sc_in< sc_lv<35> > data_t_13_1_V_read;
    sc_in< sc_lv<35> > data_t_14_0_V_read;
    sc_in< sc_lv<35> > data_t_14_1_V_read;
    sc_in< sc_lv<35> > data_t_15_0_V_read;
    sc_in< sc_lv<35> > data_t_15_1_V_read;
    sc_in< sc_lv<1> > data_t_V_offset;
    sc_out< sc_lv<35> > ap_return_0;
    sc_out< sc_lv<35> > ap_return_1;
    sc_out< sc_lv<35> > ap_return_2;
    sc_out< sc_lv<35> > ap_return_3;
    sc_out< sc_lv<35> > ap_return_4;
    sc_out< sc_lv<35> > ap_return_5;
    sc_out< sc_lv<35> > ap_return_6;
    sc_out< sc_lv<35> > ap_return_7;
    sc_out< sc_lv<35> > ap_return_8;
    sc_out< sc_lv<35> > ap_return_9;
    sc_out< sc_lv<35> > ap_return_10;
    sc_out< sc_lv<35> > ap_return_11;
    sc_out< sc_lv<35> > ap_return_12;
    sc_out< sc_lv<35> > ap_return_13;
    sc_out< sc_lv<35> > ap_return_14;
    sc_out< sc_lv<35> > ap_return_15;
    sc_out< sc_lv<35> > ap_return_16;
    sc_out< sc_lv<35> > ap_return_17;
    sc_out< sc_lv<35> > ap_return_18;
    sc_out< sc_lv<35> > ap_return_19;
    sc_out< sc_lv<35> > ap_return_20;
    sc_out< sc_lv<35> > ap_return_21;
    sc_out< sc_lv<35> > ap_return_22;
    sc_out< sc_lv<35> > ap_return_23;
    sc_out< sc_lv<35> > ap_return_24;
    sc_out< sc_lv<35> > ap_return_25;
    sc_out< sc_lv<35> > ap_return_26;
    sc_out< sc_lv<35> > ap_return_27;
    sc_out< sc_lv<35> > ap_return_28;
    sc_out< sc_lv<35> > ap_return_29;
    sc_out< sc_lv<35> > ap_return_30;
    sc_out< sc_lv<35> > ap_return_31;


    // Module declarations
    transpose_2d_ap_fixed_sa_transpose_config0_s(sc_module_name name);
    SC_HAS_PROCESS(transpose_2d_ap_fixed_sa_transpose_config0_s);

    ~transpose_2d_ap_fixed_sa_transpose_config0_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<35> > select_ln203_15_fu_664_p3;
    sc_signal< sc_lv<35> > select_ln203_fu_544_p3;
    sc_signal< sc_lv<35> > select_ln203_2_fu_560_p3;
    sc_signal< sc_lv<35> > select_ln203_4_fu_576_p3;
    sc_signal< sc_lv<35> > select_ln203_6_fu_592_p3;
    sc_signal< sc_lv<35> > select_ln203_8_fu_608_p3;
    sc_signal< sc_lv<35> > select_ln203_10_fu_624_p3;
    sc_signal< sc_lv<35> > select_ln203_12_fu_640_p3;
    sc_signal< sc_lv<35> > select_ln203_14_fu_656_p3;
    sc_signal< sc_lv<35> > select_ln203_1_fu_552_p3;
    sc_signal< sc_lv<35> > select_ln203_3_fu_568_p3;
    sc_signal< sc_lv<35> > select_ln203_5_fu_584_p3;
    sc_signal< sc_lv<35> > select_ln203_7_fu_600_p3;
    sc_signal< sc_lv<35> > select_ln203_9_fu_616_p3;
    sc_signal< sc_lv<35> > select_ln203_11_fu_632_p3;
    sc_signal< sc_lv<35> > select_ln203_13_fu_648_p3;
    sc_signal< sc_lv<35> > select_ln27_fu_688_p3;
    sc_signal< sc_lv<35> > select_ln27_1_fu_696_p3;
    sc_signal< sc_lv<35> > select_ln27_2_fu_704_p3;
    sc_signal< sc_lv<35> > select_ln27_3_fu_712_p3;
    sc_signal< sc_lv<35> > select_ln27_4_fu_720_p3;
    sc_signal< sc_lv<35> > select_ln27_5_fu_728_p3;
    sc_signal< sc_lv<35> > select_ln27_6_fu_736_p3;
    sc_signal< sc_lv<35> > select_ln27_7_fu_744_p3;
    sc_signal< sc_lv<35> > select_ln27_8_fu_752_p3;
    sc_signal< sc_lv<35> > select_ln27_9_fu_760_p3;
    sc_signal< sc_lv<35> > select_ln27_10_fu_768_p3;
    sc_signal< sc_lv<35> > select_ln27_11_fu_776_p3;
    sc_signal< sc_lv<35> > select_ln27_12_fu_784_p3;
    sc_signal< sc_lv<35> > select_ln27_13_fu_792_p3;
    sc_signal< sc_lv<35> > select_ln27_14_fu_800_p3;
    sc_signal< sc_lv<35> > select_ln27_15_fu_808_p3;
    sc_signal< sc_lv<35> > select_ln27_16_fu_816_p3;
    sc_signal< sc_lv<35> > select_ln27_17_fu_824_p3;
    sc_signal< sc_lv<35> > select_ln27_18_fu_832_p3;
    sc_signal< sc_lv<35> > select_ln27_19_fu_840_p3;
    sc_signal< sc_lv<35> > select_ln27_20_fu_848_p3;
    sc_signal< sc_lv<35> > select_ln27_21_fu_856_p3;
    sc_signal< sc_lv<35> > select_ln27_22_fu_864_p3;
    sc_signal< sc_lv<35> > select_ln27_23_fu_872_p3;
    sc_signal< sc_lv<35> > select_ln27_24_fu_880_p3;
    sc_signal< sc_lv<35> > select_ln27_25_fu_888_p3;
    sc_signal< sc_lv<35> > select_ln27_26_fu_896_p3;
    sc_signal< sc_lv<35> > select_ln27_27_fu_904_p3;
    sc_signal< sc_lv<35> > select_ln27_28_fu_912_p3;
    sc_signal< sc_lv<35> > select_ln27_29_fu_920_p3;
    sc_signal< sc_lv<35> > select_ln203_16_fu_672_p3;
    sc_signal< sc_lv<35> > select_ln203_17_fu_680_p3;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_12();
    void thread_ap_return_13();
    void thread_ap_return_14();
    void thread_ap_return_15();
    void thread_ap_return_16();
    void thread_ap_return_17();
    void thread_ap_return_18();
    void thread_ap_return_19();
    void thread_ap_return_2();
    void thread_ap_return_20();
    void thread_ap_return_21();
    void thread_ap_return_22();
    void thread_ap_return_23();
    void thread_ap_return_24();
    void thread_ap_return_25();
    void thread_ap_return_26();
    void thread_ap_return_27();
    void thread_ap_return_28();
    void thread_ap_return_29();
    void thread_ap_return_3();
    void thread_ap_return_30();
    void thread_ap_return_31();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_select_ln203_10_fu_624_p3();
    void thread_select_ln203_11_fu_632_p3();
    void thread_select_ln203_12_fu_640_p3();
    void thread_select_ln203_13_fu_648_p3();
    void thread_select_ln203_14_fu_656_p3();
    void thread_select_ln203_15_fu_664_p3();
    void thread_select_ln203_16_fu_672_p3();
    void thread_select_ln203_17_fu_680_p3();
    void thread_select_ln203_1_fu_552_p3();
    void thread_select_ln203_2_fu_560_p3();
    void thread_select_ln203_3_fu_568_p3();
    void thread_select_ln203_4_fu_576_p3();
    void thread_select_ln203_5_fu_584_p3();
    void thread_select_ln203_6_fu_592_p3();
    void thread_select_ln203_7_fu_600_p3();
    void thread_select_ln203_8_fu_608_p3();
    void thread_select_ln203_9_fu_616_p3();
    void thread_select_ln203_fu_544_p3();
    void thread_select_ln27_10_fu_768_p3();
    void thread_select_ln27_11_fu_776_p3();
    void thread_select_ln27_12_fu_784_p3();
    void thread_select_ln27_13_fu_792_p3();
    void thread_select_ln27_14_fu_800_p3();
    void thread_select_ln27_15_fu_808_p3();
    void thread_select_ln27_16_fu_816_p3();
    void thread_select_ln27_17_fu_824_p3();
    void thread_select_ln27_18_fu_832_p3();
    void thread_select_ln27_19_fu_840_p3();
    void thread_select_ln27_1_fu_696_p3();
    void thread_select_ln27_20_fu_848_p3();
    void thread_select_ln27_21_fu_856_p3();
    void thread_select_ln27_22_fu_864_p3();
    void thread_select_ln27_23_fu_872_p3();
    void thread_select_ln27_24_fu_880_p3();
    void thread_select_ln27_25_fu_888_p3();
    void thread_select_ln27_26_fu_896_p3();
    void thread_select_ln27_27_fu_904_p3();
    void thread_select_ln27_28_fu_912_p3();
    void thread_select_ln27_29_fu_920_p3();
    void thread_select_ln27_2_fu_704_p3();
    void thread_select_ln27_3_fu_712_p3();
    void thread_select_ln27_4_fu_720_p3();
    void thread_select_ln27_5_fu_728_p3();
    void thread_select_ln27_6_fu_736_p3();
    void thread_select_ln27_7_fu_744_p3();
    void thread_select_ln27_8_fu_752_p3();
    void thread_select_ln27_9_fu_760_p3();
    void thread_select_ln27_fu_688_p3();
};

}

using namespace ap_rtl;

#endif
