// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "p_fill_n_a_ap_fixed_unsigned_long_double_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_ST_fsm_state1 = "1";
const sc_lv<2> p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_ST_fsm_state2 = "10";
const sc_lv<32> p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_const_lv32_1 = "1";
const sc_lv<1> p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_const_lv1_0 = "0";
const sc_lv<6> p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_const_lv6_0 = "000000";
const sc_lv<6> p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_const_lv6_30 = "110000";
const sc_lv<35> p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_const_lv35_0 = "00000000000000000000000000000000000";
const sc_lv<6> p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_const_lv6_3F = "111111";
const sc_lv<1> p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_const_lv1_1 = "1";
const sc_lv<6> p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_const_lv6_1 = "1";
const bool p_fill_n_a_ap_fixed_unsigned_long_double_s::ap_const_boolean_1 = true;

p_fill_n_a_ap_fixed_unsigned_long_double_s::p_fill_n_a_ap_fixed_unsigned_long_double_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln744_fu_328_p2);
    sensitive << ( p_02_rec_reg_300 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_10);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_11);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_12);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_13);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_14);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_15);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_16);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_17);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_18);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_19);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_20);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_21);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_22);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_23);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_24);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_25);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_26);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_27);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_28);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_29);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_30);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_31);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_32);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_33);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_34);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_35);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_36);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_37);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_38);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_39);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_40);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_41);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_42);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_43);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_44);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_45);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_46);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_47);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_7);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_8);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_ap_return_9);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    SC_METHOD(thread_icmp_ln743_fu_322_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( p_niter_0_reg_311 );

    SC_METHOD(thread_p_niter_fu_574_p2);
    sensitive << ( p_niter_0_reg_311 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln743_fu_322_p2 );

    ap_CS_fsm = "01";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "p_fill_n_a_ap_fixed_unsigned_long_double_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
    sc_trace(mVcdFile, ap_return_8, "(port)ap_return_8");
    sc_trace(mVcdFile, ap_return_9, "(port)ap_return_9");
    sc_trace(mVcdFile, ap_return_10, "(port)ap_return_10");
    sc_trace(mVcdFile, ap_return_11, "(port)ap_return_11");
    sc_trace(mVcdFile, ap_return_12, "(port)ap_return_12");
    sc_trace(mVcdFile, ap_return_13, "(port)ap_return_13");
    sc_trace(mVcdFile, ap_return_14, "(port)ap_return_14");
    sc_trace(mVcdFile, ap_return_15, "(port)ap_return_15");
    sc_trace(mVcdFile, ap_return_16, "(port)ap_return_16");
    sc_trace(mVcdFile, ap_return_17, "(port)ap_return_17");
    sc_trace(mVcdFile, ap_return_18, "(port)ap_return_18");
    sc_trace(mVcdFile, ap_return_19, "(port)ap_return_19");
    sc_trace(mVcdFile, ap_return_20, "(port)ap_return_20");
    sc_trace(mVcdFile, ap_return_21, "(port)ap_return_21");
    sc_trace(mVcdFile, ap_return_22, "(port)ap_return_22");
    sc_trace(mVcdFile, ap_return_23, "(port)ap_return_23");
    sc_trace(mVcdFile, ap_return_24, "(port)ap_return_24");
    sc_trace(mVcdFile, ap_return_25, "(port)ap_return_25");
    sc_trace(mVcdFile, ap_return_26, "(port)ap_return_26");
    sc_trace(mVcdFile, ap_return_27, "(port)ap_return_27");
    sc_trace(mVcdFile, ap_return_28, "(port)ap_return_28");
    sc_trace(mVcdFile, ap_return_29, "(port)ap_return_29");
    sc_trace(mVcdFile, ap_return_30, "(port)ap_return_30");
    sc_trace(mVcdFile, ap_return_31, "(port)ap_return_31");
    sc_trace(mVcdFile, ap_return_32, "(port)ap_return_32");
    sc_trace(mVcdFile, ap_return_33, "(port)ap_return_33");
    sc_trace(mVcdFile, ap_return_34, "(port)ap_return_34");
    sc_trace(mVcdFile, ap_return_35, "(port)ap_return_35");
    sc_trace(mVcdFile, ap_return_36, "(port)ap_return_36");
    sc_trace(mVcdFile, ap_return_37, "(port)ap_return_37");
    sc_trace(mVcdFile, ap_return_38, "(port)ap_return_38");
    sc_trace(mVcdFile, ap_return_39, "(port)ap_return_39");
    sc_trace(mVcdFile, ap_return_40, "(port)ap_return_40");
    sc_trace(mVcdFile, ap_return_41, "(port)ap_return_41");
    sc_trace(mVcdFile, ap_return_42, "(port)ap_return_42");
    sc_trace(mVcdFile, ap_return_43, "(port)ap_return_43");
    sc_trace(mVcdFile, ap_return_44, "(port)ap_return_44");
    sc_trace(mVcdFile, ap_return_45, "(port)ap_return_45");
    sc_trace(mVcdFile, ap_return_46, "(port)ap_return_46");
    sc_trace(mVcdFile, ap_return_47, "(port)ap_return_47");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, add_ln744_fu_328_p2, "add_ln744_fu_328_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, p_niter_fu_574_p2, "p_niter_fu_574_p2");
    sc_trace(mVcdFile, icmp_ln743_fu_322_p2, "icmp_ln743_fu_322_p2");
    sc_trace(mVcdFile, p_02_rec_reg_300, "p_02_rec_reg_300");
    sc_trace(mVcdFile, p_niter_0_reg_311, "p_niter_0_reg_311");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

p_fill_n_a_ap_fixed_unsigned_long_double_s::~p_fill_n_a_ap_fixed_unsigned_long_double_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln743_fu_322_p2.read(), ap_const_lv1_0))) {
        p_02_rec_reg_300 = add_ln744_fu_328_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_02_rec_reg_300 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln743_fu_322_p2.read(), ap_const_lv1_0))) {
        p_niter_0_reg_311 = p_niter_fu_574_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_niter_0_reg_311 = ap_const_lv6_30;
    }
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_add_ln744_fu_328_p2() {
    add_ln744_fu_328_p2 = (!p_02_rec_reg_300.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(p_02_rec_reg_300.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln743_fu_322_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln743_fu_322_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_0() {
    ap_return_0 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_1() {
    ap_return_1 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_10() {
    ap_return_10 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_11() {
    ap_return_11 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_12() {
    ap_return_12 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_13() {
    ap_return_13 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_14() {
    ap_return_14 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_15() {
    ap_return_15 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_16() {
    ap_return_16 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_17() {
    ap_return_17 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_18() {
    ap_return_18 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_19() {
    ap_return_19 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_2() {
    ap_return_2 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_20() {
    ap_return_20 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_21() {
    ap_return_21 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_22() {
    ap_return_22 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_23() {
    ap_return_23 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_24() {
    ap_return_24 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_25() {
    ap_return_25 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_26() {
    ap_return_26 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_27() {
    ap_return_27 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_28() {
    ap_return_28 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_29() {
    ap_return_29 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_3() {
    ap_return_3 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_30() {
    ap_return_30 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_31() {
    ap_return_31 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_32() {
    ap_return_32 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_33() {
    ap_return_33 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_34() {
    ap_return_34 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_35() {
    ap_return_35 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_36() {
    ap_return_36 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_37() {
    ap_return_37 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_38() {
    ap_return_38 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_39() {
    ap_return_39 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_4() {
    ap_return_4 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_40() {
    ap_return_40 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_41() {
    ap_return_41 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_42() {
    ap_return_42 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_43() {
    ap_return_43 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_44() {
    ap_return_44 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_45() {
    ap_return_45 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_46() {
    ap_return_46 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_47() {
    ap_return_47 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_5() {
    ap_return_5 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_6() {
    ap_return_6 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_7() {
    ap_return_7 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_8() {
    ap_return_8 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_return_9() {
    ap_return_9 = ap_const_lv35_0;
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_icmp_ln743_fu_322_p2() {
    icmp_ln743_fu_322_p2 = (!p_niter_0_reg_311.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(p_niter_0_reg_311.read() == ap_const_lv6_0);
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_p_niter_fu_574_p2() {
    p_niter_fu_574_p2 = (!p_niter_0_reg_311.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<6>(): (sc_biguint<6>(p_niter_0_reg_311.read()) + sc_biguint<6>(ap_const_lv6_3F));
}

void p_fill_n_a_ap_fixed_unsigned_long_double_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln743_fu_322_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

}

