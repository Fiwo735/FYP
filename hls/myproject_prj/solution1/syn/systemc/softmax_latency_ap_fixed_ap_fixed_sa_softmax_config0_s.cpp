// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::ap_ST_fsm_pp0_stage0 = "1";
const bool softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::ap_const_boolean_1 = true;
const sc_lv<32> softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::ap_const_boolean_0 = false;
const sc_lv<1> softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::ap_const_lv1_0 = "0";
const sc_lv<3> softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::ap_const_lv3_1 = "1";
const sc_lv<61> softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::ap_const_lv61_0 = "0000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::ap_const_lv32_4 = "100";
const sc_lv<32> softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::ap_const_lv32_F = "1111";

softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    exp_table12_U = new softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s_exbkb("exp_table12_U");
    exp_table12_U->clk(ap_clk);
    exp_table12_U->reset(ap_rst);
    exp_table12_U->address0(exp_table12_address0);
    exp_table12_U->ce0(exp_table12_ce0);
    exp_table12_U->q0(exp_table12_q0);
    exp_table12_U->address1(exp_table12_address1);
    exp_table12_U->ce1(exp_table12_ce1);
    exp_table12_U->q1(exp_table12_q1);
    invert_table13_U = new softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s_incud("invert_table13_U");
    invert_table13_U->clk(ap_clk);
    invert_table13_U->reset(ap_rst);
    invert_table13_U->address0(invert_table13_address0);
    invert_table13_U->ce0(invert_table13_ce0);
    invert_table13_U->q0(invert_table13_q0);
    myproject_mul_mul_16s_16s_32_1_1_U410 = new myproject_mul_mul_16s_16s_32_1_1<1,1,16,16,32>("myproject_mul_mul_16s_16s_32_1_1_U410");
    myproject_mul_mul_16s_16s_32_1_1_U410->din0(exp_res_0_V_reg_321);
    myproject_mul_mul_16s_16s_32_1_1_U410->din1(mul_ln1118_fu_277_p1);
    myproject_mul_mul_16s_16s_32_1_1_U410->dout(mul_ln1118_fu_277_p2);
    myproject_mul_mul_16s_16s_32_1_1_U411 = new myproject_mul_mul_16s_16s_32_1_1<1,1,16,16,32>("myproject_mul_mul_16s_16s_32_1_1_U411");
    myproject_mul_mul_16s_16s_32_1_1_U411->din0(exp_res_1_V_reg_326);
    myproject_mul_mul_16s_16s_32_1_1_U411->din1(mul_ln1118_1_fu_284_p1);
    myproject_mul_mul_16s_16s_32_1_1_U411->dout(mul_ln1118_1_fu_284_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_idle_pp0_0to2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to2 );

    SC_METHOD(thread_data_V_address0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln329_fu_168_p1 );

    SC_METHOD(thread_data_V_address1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_3_fu_179_p3 );

    SC_METHOD(thread_data_V_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_data_V_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_exp_sum_V_fu_218_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exp_table12_q1 );

    SC_METHOD(thread_exp_sum_V_fu_218_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exp_table12_q0 );

    SC_METHOD(thread_exp_sum_V_fu_218_p2);
    sensitive << ( exp_sum_V_fu_218_p0 );
    sensitive << ( exp_sum_V_fu_218_p1 );

    SC_METHOD(thread_exp_table12_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln330_fu_198_p1 );

    SC_METHOD(thread_exp_table12_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln330_1_fu_213_p1 );

    SC_METHOD(thread_exp_table12_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_exp_table12_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_invert_table13_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( zext_ln342_fu_234_p1 );

    SC_METHOD(thread_invert_table13_ce0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_mul_ln1118_1_fu_284_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( sext_ln1118_fu_267_p1 );

    SC_METHOD(thread_mul_ln1118_fu_277_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( sext_ln1118_fu_267_p1 );

    SC_METHOD(thread_or_ln203_fu_252_p2);
    sensitive << ( tmp_fu_239_p4 );

    SC_METHOD(thread_or_ln329_fu_173_p2);
    sensitive << ( tmp_2_fu_158_p4 );

    SC_METHOD(thread_res_V_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( zext_ln203_fu_247_p1 );

    SC_METHOD(thread_res_V_address1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_1_fu_258_p3 );

    SC_METHOD(thread_res_V_ce0);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_res_V_ce1);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_res_V_d0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( mul_ln1118_fu_277_p2 );

    SC_METHOD(thread_res_V_d1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( mul_ln1118_1_fu_284_p2 );

    SC_METHOD(thread_res_V_we0);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_res_V_we1);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_sext_ln1118_fu_267_p1);
    sensitive << ( invert_table13_q0 );

    SC_METHOD(thread_tmp_1_fu_258_p3);
    sensitive << ( or_ln203_fu_252_p2 );

    SC_METHOD(thread_tmp_2_fu_158_p4);
    sensitive << ( data_V_offset );
    sensitive << ( data_V_offset1 );

    SC_METHOD(thread_tmp_3_fu_179_p3);
    sensitive << ( or_ln329_fu_173_p2 );

    SC_METHOD(thread_tmp_fu_239_p4);
    sensitive << ( res_V_offset3_read_reg_291_pp0_iter2_reg );
    sensitive << ( res_V_offset_read_reg_296_pp0_iter2_reg );

    SC_METHOD(thread_y_V_1_fu_203_p4);
    sensitive << ( data_V_q1 );

    SC_METHOD(thread_y_V_2_fu_224_p4);
    sensitive << ( exp_sum_V_fu_218_p2 );

    SC_METHOD(thread_y_V_fu_188_p4);
    sensitive << ( data_V_q0 );

    SC_METHOD(thread_zext_ln203_fu_247_p1);
    sensitive << ( tmp_fu_239_p4 );

    SC_METHOD(thread_zext_ln329_fu_168_p1);
    sensitive << ( tmp_2_fu_158_p4 );

    SC_METHOD(thread_zext_ln330_1_fu_213_p1);
    sensitive << ( y_V_1_fu_203_p4 );

    SC_METHOD(thread_zext_ln330_fu_198_p1);
    sensitive << ( y_V_fu_188_p4 );

    SC_METHOD(thread_zext_ln342_fu_234_p1);
    sensitive << ( y_V_2_fu_224_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
    sc_trace(mVcdFile, data_V_address0, "(port)data_V_address0");
    sc_trace(mVcdFile, data_V_ce0, "(port)data_V_ce0");
    sc_trace(mVcdFile, data_V_q0, "(port)data_V_q0");
    sc_trace(mVcdFile, data_V_address1, "(port)data_V_address1");
    sc_trace(mVcdFile, data_V_ce1, "(port)data_V_ce1");
    sc_trace(mVcdFile, data_V_q1, "(port)data_V_q1");
    sc_trace(mVcdFile, data_V_offset, "(port)data_V_offset");
    sc_trace(mVcdFile, data_V_offset1, "(port)data_V_offset1");
    sc_trace(mVcdFile, res_V_address0, "(port)res_V_address0");
    sc_trace(mVcdFile, res_V_ce0, "(port)res_V_ce0");
    sc_trace(mVcdFile, res_V_we0, "(port)res_V_we0");
    sc_trace(mVcdFile, res_V_d0, "(port)res_V_d0");
    sc_trace(mVcdFile, res_V_address1, "(port)res_V_address1");
    sc_trace(mVcdFile, res_V_ce1, "(port)res_V_ce1");
    sc_trace(mVcdFile, res_V_we1, "(port)res_V_we1");
    sc_trace(mVcdFile, res_V_d1, "(port)res_V_d1");
    sc_trace(mVcdFile, res_V_offset, "(port)res_V_offset");
    sc_trace(mVcdFile, res_V_offset3, "(port)res_V_offset3");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exp_table12_address0, "exp_table12_address0");
    sc_trace(mVcdFile, exp_table12_ce0, "exp_table12_ce0");
    sc_trace(mVcdFile, exp_table12_q0, "exp_table12_q0");
    sc_trace(mVcdFile, exp_table12_address1, "exp_table12_address1");
    sc_trace(mVcdFile, exp_table12_ce1, "exp_table12_ce1");
    sc_trace(mVcdFile, exp_table12_q1, "exp_table12_q1");
    sc_trace(mVcdFile, invert_table13_address0, "invert_table13_address0");
    sc_trace(mVcdFile, invert_table13_ce0, "invert_table13_ce0");
    sc_trace(mVcdFile, invert_table13_q0, "invert_table13_q0");
    sc_trace(mVcdFile, res_V_offset3_read_reg_291, "res_V_offset3_read_reg_291");
    sc_trace(mVcdFile, res_V_offset3_read_reg_291_pp0_iter1_reg, "res_V_offset3_read_reg_291_pp0_iter1_reg");
    sc_trace(mVcdFile, res_V_offset3_read_reg_291_pp0_iter2_reg, "res_V_offset3_read_reg_291_pp0_iter2_reg");
    sc_trace(mVcdFile, res_V_offset_read_reg_296, "res_V_offset_read_reg_296");
    sc_trace(mVcdFile, res_V_offset_read_reg_296_pp0_iter1_reg, "res_V_offset_read_reg_296_pp0_iter1_reg");
    sc_trace(mVcdFile, res_V_offset_read_reg_296_pp0_iter2_reg, "res_V_offset_read_reg_296_pp0_iter2_reg");
    sc_trace(mVcdFile, exp_res_0_V_reg_321, "exp_res_0_V_reg_321");
    sc_trace(mVcdFile, exp_res_1_V_reg_326, "exp_res_1_V_reg_326");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, zext_ln329_fu_168_p1, "zext_ln329_fu_168_p1");
    sc_trace(mVcdFile, tmp_3_fu_179_p3, "tmp_3_fu_179_p3");
    sc_trace(mVcdFile, zext_ln330_fu_198_p1, "zext_ln330_fu_198_p1");
    sc_trace(mVcdFile, zext_ln330_1_fu_213_p1, "zext_ln330_1_fu_213_p1");
    sc_trace(mVcdFile, zext_ln342_fu_234_p1, "zext_ln342_fu_234_p1");
    sc_trace(mVcdFile, zext_ln203_fu_247_p1, "zext_ln203_fu_247_p1");
    sc_trace(mVcdFile, tmp_1_fu_258_p3, "tmp_1_fu_258_p3");
    sc_trace(mVcdFile, mul_ln1118_fu_277_p2, "mul_ln1118_fu_277_p2");
    sc_trace(mVcdFile, mul_ln1118_1_fu_284_p2, "mul_ln1118_1_fu_284_p2");
    sc_trace(mVcdFile, tmp_2_fu_158_p4, "tmp_2_fu_158_p4");
    sc_trace(mVcdFile, or_ln329_fu_173_p2, "or_ln329_fu_173_p2");
    sc_trace(mVcdFile, y_V_fu_188_p4, "y_V_fu_188_p4");
    sc_trace(mVcdFile, y_V_1_fu_203_p4, "y_V_1_fu_203_p4");
    sc_trace(mVcdFile, exp_sum_V_fu_218_p0, "exp_sum_V_fu_218_p0");
    sc_trace(mVcdFile, exp_sum_V_fu_218_p1, "exp_sum_V_fu_218_p1");
    sc_trace(mVcdFile, exp_sum_V_fu_218_p2, "exp_sum_V_fu_218_p2");
    sc_trace(mVcdFile, y_V_2_fu_224_p4, "y_V_2_fu_224_p4");
    sc_trace(mVcdFile, tmp_fu_239_p4, "tmp_fu_239_p4");
    sc_trace(mVcdFile, or_ln203_fu_252_p2, "or_ln203_fu_252_p2");
    sc_trace(mVcdFile, mul_ln1118_fu_277_p1, "mul_ln1118_fu_277_p1");
    sc_trace(mVcdFile, sext_ln1118_fu_267_p1, "sext_ln1118_fu_267_p1");
    sc_trace(mVcdFile, mul_ln1118_1_fu_284_p1, "mul_ln1118_1_fu_284_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to2, "ap_idle_pp0_0to2");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::~softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete exp_table12_U;
    delete invert_table13_U;
    delete myproject_mul_mul_16s_16s_32_1_1_U410;
    delete myproject_mul_mul_16s_16s_32_1_1_U411;
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        exp_res_0_V_reg_321 = exp_table12_q0.read();
        exp_res_1_V_reg_326 = exp_table12_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        res_V_offset3_read_reg_291 = res_V_offset3.read();
        res_V_offset3_read_reg_291_pp0_iter1_reg = res_V_offset3_read_reg_291.read();
        res_V_offset_read_reg_296 = res_V_offset.read();
        res_V_offset_read_reg_296_pp0_iter1_reg = res_V_offset_read_reg_296.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        res_V_offset3_read_reg_291_pp0_iter2_reg = res_V_offset3_read_reg_291_pp0_iter1_reg.read();
        res_V_offset_read_reg_296_pp0_iter2_reg = res_V_offset_read_reg_296_pp0_iter1_reg.read();
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()));
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_0));
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_idle_pp0_0to2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0_0to2 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to2 = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to2.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_data_V_address0() {
    data_V_address0 =  (sc_lv<3>) (zext_ln329_fu_168_p1.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_data_V_address1() {
    data_V_address1 =  (sc_lv<3>) (tmp_3_fu_179_p3.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_data_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        data_V_ce0 = ap_const_logic_1;
    } else {
        data_V_ce0 = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_data_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        data_V_ce1 = ap_const_logic_1;
    } else {
        data_V_ce1 = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_exp_sum_V_fu_218_p0() {
    exp_sum_V_fu_218_p0 = exp_table12_q1.read();
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_exp_sum_V_fu_218_p1() {
    exp_sum_V_fu_218_p1 = exp_table12_q0.read();
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_exp_sum_V_fu_218_p2() {
    exp_sum_V_fu_218_p2 = (!exp_sum_V_fu_218_p0.read().is_01() || !exp_sum_V_fu_218_p1.read().is_01())? sc_lv<16>(): (sc_bigint<16>(exp_sum_V_fu_218_p0.read()) + sc_bigint<16>(exp_sum_V_fu_218_p1.read()));
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_exp_table12_address0() {
    exp_table12_address0 =  (sc_lv<12>) (zext_ln330_fu_198_p1.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_exp_table12_address1() {
    exp_table12_address1 =  (sc_lv<12>) (zext_ln330_1_fu_213_p1.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_exp_table12_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        exp_table12_ce0 = ap_const_logic_1;
    } else {
        exp_table12_ce0 = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_exp_table12_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        exp_table12_ce1 = ap_const_logic_1;
    } else {
        exp_table12_ce1 = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_invert_table13_address0() {
    invert_table13_address0 =  (sc_lv<12>) (zext_ln342_fu_234_p1.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_invert_table13_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        invert_table13_ce0 = ap_const_logic_1;
    } else {
        invert_table13_ce0 = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_mul_ln1118_1_fu_284_p1() {
    mul_ln1118_1_fu_284_p1 =  (sc_lv<16>) (sext_ln1118_fu_267_p1.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_mul_ln1118_fu_277_p1() {
    mul_ln1118_fu_277_p1 =  (sc_lv<16>) (sext_ln1118_fu_267_p1.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_or_ln203_fu_252_p2() {
    or_ln203_fu_252_p2 = (tmp_fu_239_p4.read() | ap_const_lv3_1);
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_or_ln329_fu_173_p2() {
    or_ln329_fu_173_p2 = (tmp_2_fu_158_p4.read() | ap_const_lv3_1);
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_res_V_address0() {
    res_V_address0 =  (sc_lv<3>) (zext_ln203_fu_247_p1.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_res_V_address1() {
    res_V_address1 =  (sc_lv<3>) (tmp_1_fu_258_p3.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_res_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        res_V_ce0 = ap_const_logic_1;
    } else {
        res_V_ce0 = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_res_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        res_V_ce1 = ap_const_logic_1;
    } else {
        res_V_ce1 = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_res_V_d0() {
    res_V_d0 = mul_ln1118_fu_277_p2.read();
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_res_V_d1() {
    res_V_d1 = mul_ln1118_1_fu_284_p2.read();
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_res_V_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        res_V_we0 = ap_const_logic_1;
    } else {
        res_V_we0 = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_res_V_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        res_V_we1 = ap_const_logic_1;
    } else {
        res_V_we1 = ap_const_logic_0;
    }
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_sext_ln1118_fu_267_p1() {
    sext_ln1118_fu_267_p1 = esl_sext<32,16>(invert_table13_q0.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_tmp_1_fu_258_p3() {
    tmp_1_fu_258_p3 = esl_concat<61,3>(ap_const_lv61_0, or_ln203_fu_252_p2.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_tmp_2_fu_158_p4() {
    tmp_2_fu_158_p4 = esl_concat<2,1>(esl_concat<1,1>(data_V_offset.read(), data_V_offset1.read()), ap_const_lv1_0);
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_tmp_3_fu_179_p3() {
    tmp_3_fu_179_p3 = esl_concat<61,3>(ap_const_lv61_0, or_ln329_fu_173_p2.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_tmp_fu_239_p4() {
    tmp_fu_239_p4 = esl_concat<2,1>(esl_concat<1,1>(res_V_offset_read_reg_296_pp0_iter2_reg.read(), res_V_offset3_read_reg_291_pp0_iter2_reg.read()), ap_const_lv1_0);
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_y_V_1_fu_203_p4() {
    y_V_1_fu_203_p4 = data_V_q1.read().range(15, 4);
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_y_V_2_fu_224_p4() {
    y_V_2_fu_224_p4 = exp_sum_V_fu_218_p2.read().range(15, 4);
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_y_V_fu_188_p4() {
    y_V_fu_188_p4 = data_V_q0.read().range(15, 4);
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_zext_ln203_fu_247_p1() {
    zext_ln203_fu_247_p1 = esl_zext<64,3>(tmp_fu_239_p4.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_zext_ln329_fu_168_p1() {
    zext_ln329_fu_168_p1 = esl_zext<64,3>(tmp_2_fu_158_p4.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_zext_ln330_1_fu_213_p1() {
    zext_ln330_1_fu_213_p1 = esl_zext<64,12>(y_V_1_fu_203_p4.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_zext_ln330_fu_198_p1() {
    zext_ln330_fu_198_p1 = esl_zext<64,12>(y_V_fu_188_p4.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_zext_ln342_fu_234_p1() {
    zext_ln342_fu_234_p1 = esl_zext<64,12>(y_V_2_fu_224_p4.read());
}

void softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

