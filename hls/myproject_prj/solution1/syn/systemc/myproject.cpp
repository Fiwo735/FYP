// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "myproject.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic myproject::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic myproject::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<48> myproject::ap_ST_fsm_state1 = "1";
const sc_lv<48> myproject::ap_ST_fsm_state2 = "10";
const sc_lv<48> myproject::ap_ST_fsm_state3 = "100";
const sc_lv<48> myproject::ap_ST_fsm_state4 = "1000";
const sc_lv<48> myproject::ap_ST_fsm_state5 = "10000";
const sc_lv<48> myproject::ap_ST_fsm_state6 = "100000";
const sc_lv<48> myproject::ap_ST_fsm_state7 = "1000000";
const sc_lv<48> myproject::ap_ST_fsm_state8 = "10000000";
const sc_lv<48> myproject::ap_ST_fsm_state9 = "100000000";
const sc_lv<48> myproject::ap_ST_fsm_state10 = "1000000000";
const sc_lv<48> myproject::ap_ST_fsm_state11 = "10000000000";
const sc_lv<48> myproject::ap_ST_fsm_state12 = "100000000000";
const sc_lv<48> myproject::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<48> myproject::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<32> myproject::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> myproject::ap_const_lv32_C = "1100";
const sc_lv<32> myproject::ap_const_lv32_F = "1111";
const sc_lv<32> myproject::ap_const_lv32_10 = "10000";
const sc_lv<32> myproject::ap_const_lv32_11 = "10001";
const sc_lv<32> myproject::ap_const_lv32_12 = "10010";
const sc_lv<32> myproject::ap_const_lv32_13 = "10011";
const sc_lv<32> myproject::ap_const_lv32_14 = "10100";
const sc_lv<32> myproject::ap_const_lv32_15 = "10101";
const sc_lv<32> myproject::ap_const_lv32_16 = "10110";
const sc_lv<32> myproject::ap_const_lv32_17 = "10111";
const sc_lv<32> myproject::ap_const_lv32_18 = "11000";
const sc_lv<32> myproject::ap_const_lv32_19 = "11001";
const sc_lv<32> myproject::ap_const_lv32_1A = "11010";
const sc_lv<32> myproject::ap_const_lv32_1B = "11011";
const sc_lv<32> myproject::ap_const_lv32_1C = "11100";
const sc_lv<32> myproject::ap_const_lv32_1D = "11101";
const sc_lv<32> myproject::ap_const_lv32_1E = "11110";
const sc_lv<32> myproject::ap_const_lv32_2B = "101011";
const sc_lv<32> myproject::ap_const_lv32_2C = "101100";
const sc_lv<32> myproject::ap_const_lv32_2D = "101101";
const sc_lv<32> myproject::ap_const_lv32_2E = "101110";
const sc_lv<32> myproject::ap_const_lv32_D = "1101";
const sc_lv<32> myproject::ap_const_lv32_E = "1110";
const sc_lv<32> myproject::ap_const_lv32_2 = "10";
const sc_lv<32> myproject::ap_const_lv32_3 = "11";
const sc_lv<32> myproject::ap_const_lv32_4 = "100";
const sc_lv<32> myproject::ap_const_lv32_5 = "101";
const sc_lv<32> myproject::ap_const_lv32_6 = "110";
const sc_lv<32> myproject::ap_const_lv32_7 = "111";
const sc_lv<32> myproject::ap_const_lv32_8 = "1000";
const sc_lv<32> myproject::ap_const_lv32_9 = "1001";
const sc_lv<32> myproject::ap_const_lv32_A = "1010";
const sc_lv<32> myproject::ap_const_lv32_B = "1011";
const sc_lv<32> myproject::ap_const_lv32_1F = "11111";
const sc_lv<32> myproject::ap_const_lv32_20 = "100000";
const sc_lv<32> myproject::ap_const_lv32_21 = "100001";
const sc_lv<32> myproject::ap_const_lv32_22 = "100010";
const sc_lv<32> myproject::ap_const_lv32_23 = "100011";
const sc_lv<32> myproject::ap_const_lv32_24 = "100100";
const sc_lv<32> myproject::ap_const_lv32_25 = "100101";
const sc_lv<32> myproject::ap_const_lv32_26 = "100110";
const sc_lv<32> myproject::ap_const_lv32_27 = "100111";
const sc_lv<32> myproject::ap_const_lv32_28 = "101000";
const sc_lv<32> myproject::ap_const_lv32_29 = "101001";
const sc_lv<64> myproject::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> myproject::ap_const_lv64_2 = "10";
const sc_lv<64> myproject::ap_const_lv64_1 = "1";
const sc_lv<64> myproject::ap_const_lv64_4 = "100";
const sc_lv<64> myproject::ap_const_lv64_6 = "110";
const sc_lv<64> myproject::ap_const_lv64_3 = "11";
const sc_lv<64> myproject::ap_const_lv64_8 = "1000";
const sc_lv<64> myproject::ap_const_lv64_A = "1010";
const sc_lv<64> myproject::ap_const_lv64_5 = "101";
const sc_lv<64> myproject::ap_const_lv64_C = "1100";
const sc_lv<64> myproject::ap_const_lv64_E = "1110";
const sc_lv<64> myproject::ap_const_lv64_7 = "111";
const sc_lv<64> myproject::ap_const_lv64_10 = "10000";
const sc_lv<64> myproject::ap_const_lv64_12 = "10010";
const sc_lv<64> myproject::ap_const_lv64_9 = "1001";
const sc_lv<64> myproject::ap_const_lv64_14 = "10100";
const sc_lv<64> myproject::ap_const_lv64_16 = "10110";
const sc_lv<64> myproject::ap_const_lv64_B = "1011";
const sc_lv<64> myproject::ap_const_lv64_18 = "11000";
const sc_lv<64> myproject::ap_const_lv64_1A = "11010";
const sc_lv<64> myproject::ap_const_lv64_D = "1101";
const sc_lv<64> myproject::ap_const_lv64_1C = "11100";
const sc_lv<64> myproject::ap_const_lv64_1E = "11110";
const sc_lv<64> myproject::ap_const_lv64_F = "1111";
const sc_lv<64> myproject::ap_const_lv64_20 = "100000";
const sc_lv<64> myproject::ap_const_lv64_22 = "100010";
const sc_lv<64> myproject::ap_const_lv64_11 = "10001";
const sc_lv<64> myproject::ap_const_lv64_24 = "100100";
const sc_lv<64> myproject::ap_const_lv64_26 = "100110";
const sc_lv<64> myproject::ap_const_lv64_13 = "10011";
const sc_lv<64> myproject::ap_const_lv64_28 = "101000";
const sc_lv<64> myproject::ap_const_lv64_2A = "101010";
const sc_lv<64> myproject::ap_const_lv64_15 = "10101";
const sc_lv<64> myproject::ap_const_lv64_2C = "101100";
const sc_lv<64> myproject::ap_const_lv64_2E = "101110";
const sc_lv<64> myproject::ap_const_lv64_17 = "10111";
const sc_lv<64> myproject::ap_const_lv64_30 = "110000";
const sc_lv<64> myproject::ap_const_lv64_32 = "110010";
const sc_lv<64> myproject::ap_const_lv64_19 = "11001";
const sc_lv<64> myproject::ap_const_lv64_34 = "110100";
const sc_lv<64> myproject::ap_const_lv64_36 = "110110";
const sc_lv<64> myproject::ap_const_lv64_1B = "11011";
const sc_lv<64> myproject::ap_const_lv64_38 = "111000";
const sc_lv<64> myproject::ap_const_lv64_3A = "111010";
const sc_lv<64> myproject::ap_const_lv64_1D = "11101";
const sc_lv<64> myproject::ap_const_lv64_3C = "111100";
const sc_lv<64> myproject::ap_const_lv64_3E = "111110";
const sc_lv<64> myproject::ap_const_lv64_1F = "11111";
const sc_lv<32> myproject::ap_const_lv32_2F = "101111";
const sc_lv<16> myproject::ap_const_lv16_10 = "10000";
const sc_lv<16> myproject::ap_const_lv16_5 = "101";
const sc_lv<10> myproject::ap_const_lv10_0 = "0000000000";
const bool myproject::ap_const_boolean_0 = false;
const bool myproject::ap_const_boolean_1 = true;

myproject::myproject(sc_module_name name) : sc_module(name), mVcdFile(0) {
    log_table_i_U = new myproject_log_table_i("log_table_i_U");
    log_table_i_U->clk(ap_clk);
    log_table_i_U->reset(ap_rst);
    log_table_i_U->address0(log_table_i_address0);
    log_table_i_U->ce0(log_table_i_ce0);
    log_table_i_U->we0(log_table_i_we0);
    log_table_i_U->d0(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_d0);
    log_table_i_U->q0(log_table_i_q0);
    log_table_i_U->address1(log_table_i_address1);
    log_table_i_U->ce1(log_table_i_ce1);
    log_table_i_U->we1(log_table_i_we1);
    log_table_i_U->d1(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_d1);
    log_table_i_U->q1(log_table_i_q1);
    transformer_0_out_U = new myproject_transformer_0_out("transformer_0_out_U");
    transformer_0_out_U->clk(ap_clk);
    transformer_0_out_U->reset(ap_rst);
    transformer_0_out_U->address0(transformer_0_out_address0);
    transformer_0_out_U->ce0(transformer_0_out_ce0);
    transformer_0_out_U->we0(transformer_0_out_we0);
    transformer_0_out_U->d0(grp_transformer_fu_822_res_V_d0);
    transformer_0_out_U->q0(transformer_0_out_q0);
    transformer_0_out_U->address1(transformer_0_out_address1);
    transformer_0_out_U->ce1(transformer_0_out_ce1);
    transformer_0_out_U->we1(transformer_0_out_we1);
    transformer_0_out_U->d1(grp_transformer_fu_822_res_V_d1);
    transformer_0_out_U->q1(transformer_0_out_q1);
    mlp_dimensions_reduced_V_U = new myproject_mlp_dimensions_reduced_V("mlp_dimensions_reduced_V_U");
    mlp_dimensions_reduced_V_U->clk(ap_clk);
    mlp_dimensions_reduced_V_U->reset(ap_rst);
    mlp_dimensions_reduced_V_U->address0(mlp_dimensions_reduced_V_address0);
    mlp_dimensions_reduced_V_U->ce0(mlp_dimensions_reduced_V_ce0);
    mlp_dimensions_reduced_V_U->we0(mlp_dimensions_reduced_V_we0);
    mlp_dimensions_reduced_V_U->d0(transformer_0_out_q0);
    mlp_dimensions_reduced_V_U->q0(mlp_dimensions_reduced_V_q0);
    mlp_dimensions_reduced_V_U->address1(mlp_dimensions_reduced_V_address1);
    mlp_dimensions_reduced_V_U->ce1(mlp_dimensions_reduced_V_ce1);
    mlp_dimensions_reduced_V_U->we1(mlp_dimensions_reduced_V_we1);
    mlp_dimensions_reduced_V_U->d1(transformer_0_out_q1);
    mlp_dimensions_reduced_V_U->q1(mlp_dimensions_reduced_V_q1);
    grp_transformer_fu_822 = new transformer("grp_transformer_fu_822");
    grp_transformer_fu_822->ap_clk(ap_clk);
    grp_transformer_fu_822->ap_rst(ap_rst);
    grp_transformer_fu_822->ap_start(grp_transformer_fu_822_ap_start);
    grp_transformer_fu_822->ap_done(grp_transformer_fu_822_ap_done);
    grp_transformer_fu_822->ap_idle(grp_transformer_fu_822_ap_idle);
    grp_transformer_fu_822->ap_ready(grp_transformer_fu_822_ap_ready);
    grp_transformer_fu_822->data_1_V_read(embedded_with_cls_1_V_reg_1170);
    grp_transformer_fu_822->data_3_V_read(embedded_with_cls_3_V_reg_1175);
    grp_transformer_fu_822->data_5_V_read(embedded_with_cls_5_V_reg_1180);
    grp_transformer_fu_822->data_7_V_read(embedded_with_cls_7_V_reg_1185);
    grp_transformer_fu_822->data_9_V_read(embedded_with_cls_9_V_reg_1190);
    grp_transformer_fu_822->data_11_V_read(embedded_with_cls_11_V_reg_1195);
    grp_transformer_fu_822->data_13_V_read(embedded_with_cls_13_V_reg_1200);
    grp_transformer_fu_822->data_15_V_read(embedded_with_cls_15_V_reg_1205);
    grp_transformer_fu_822->data_17_V_read(embedded_with_cls_17_V_reg_1210);
    grp_transformer_fu_822->data_19_V_read(embedded_with_cls_19_V_reg_1215);
    grp_transformer_fu_822->data_21_V_read(embedded_with_cls_21_V_reg_1220);
    grp_transformer_fu_822->data_23_V_read(embedded_with_cls_23_V_reg_1225);
    grp_transformer_fu_822->data_25_V_read(embedded_with_cls_25_V_reg_1230);
    grp_transformer_fu_822->data_27_V_read(embedded_with_cls_27_V_reg_1235);
    grp_transformer_fu_822->data_29_V_read(embedded_with_cls_29_V_reg_1240);
    grp_transformer_fu_822->data_31_V_read(embedded_with_cls_31_V_reg_1245);
    grp_transformer_fu_822->res_V_address0(grp_transformer_fu_822_res_V_address0);
    grp_transformer_fu_822->res_V_ce0(grp_transformer_fu_822_res_V_ce0);
    grp_transformer_fu_822->res_V_we0(grp_transformer_fu_822_res_V_we0);
    grp_transformer_fu_822->res_V_d0(grp_transformer_fu_822_res_V_d0);
    grp_transformer_fu_822->res_V_address1(grp_transformer_fu_822_res_V_address1);
    grp_transformer_fu_822->res_V_ce1(grp_transformer_fu_822_res_V_ce1);
    grp_transformer_fu_822->res_V_we1(grp_transformer_fu_822_res_V_we1);
    grp_transformer_fu_822->res_V_d1(grp_transformer_fu_822_res_V_d1);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847 = new dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2("grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847");
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_clk(ap_clk);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_rst(ap_rst);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_start(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_done(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_done);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_idle(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_idle);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_ready(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_ready);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->data_V_address0(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_address0);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->data_V_ce0(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_ce0);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->data_V_q0(data_in_V_q0);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->data_V_address1(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_address1);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->data_V_ce1(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_ce1);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->data_V_q1(data_in_V_q1);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_0(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_0);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_1(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_1);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_2(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_2);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_3(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_3);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_4(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_4);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_5(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_5);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_6(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_6);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_7(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_7);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_8(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_8);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_9(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_9);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_10(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_10);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_11(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_11);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_12(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_12);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_13(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_13);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_14(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_14);
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847->ap_return_15(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_15);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853 = new init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s("grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853");
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->ap_clk(ap_clk);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->ap_rst(ap_rst);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->ap_start(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->ap_done(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_done);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->ap_idle(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_idle);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->ap_ready(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_ready);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->table_out_V_address0(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_address0);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->table_out_V_ce0(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_ce0);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->table_out_V_we0(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_we0);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->table_out_V_d0(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_d0);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->table_out_V_address1(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_address1);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->table_out_V_ce1(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_ce1);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->table_out_V_we1(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_we1);
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853->table_out_V_d1(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_d1);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858 = new dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0("grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858");
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->ap_clk(ap_clk);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->ap_rst(ap_rst);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->ap_start(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->ap_done(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_done);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->ap_idle(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_idle);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->ap_ready(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_ready);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->data_V_address0(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_address0);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->data_V_ce0(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_ce0);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->data_V_q0(mlp_dimensions_reduced_V_q0);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->data_V_address1(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_address1);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->data_V_ce1(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_ce1);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->data_V_q1(mlp_dimensions_reduced_V_q1);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->ap_return_0(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_0);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->ap_return_1(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_1);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->ap_return_2(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_2);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->ap_return_3(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_3);
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858->ap_return_4(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_4);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863 = new softmax_latency_ap_fixed_ap_fixed_softmax_config0_s("grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863");
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->ap_clk(ap_clk);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->ap_rst(ap_rst);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->ap_start(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->ap_done(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_done);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->ap_idle(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_idle);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->ap_ready(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_ready);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->data_0_V_read(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_0_V_read);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->data_1_V_read(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_1_V_read);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->data_2_V_read(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_2_V_read);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->data_3_V_read(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_3_V_read);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->data_4_V_read(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_4_V_read);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->ap_return_0(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_0);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->ap_return_1(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_1);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->ap_return_2(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_2);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->ap_return_3(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_3);
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863->ap_return_4(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_4);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state33);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state4);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state42);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_block_state15_on_subcall_done);
    sensitive << ( grp_transformer_fu_822_ap_done );
    sensitive << ( grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_const_size_in_1);
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_const_size_in_1_ap_vld);
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_const_size_out_1);
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_const_size_out_1_ap_vld);
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_data_in_V_address0);
    sensitive << ( grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_in_V_address1);
    sensitive << ( grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_address1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_in_V_ce0);
    sensitive << ( grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_in_V_ce1);
    sensitive << ( grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_ce1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_out_V_address0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_data_out_V_address1);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_data_out_V_ce0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_data_out_V_ce1);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_data_out_V_d0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( sext_ln728_fu_1101_p1 );
    sensitive << ( sext_ln728_2_fu_1135_p1 );
    sensitive << ( sext_ln728_4_fu_1165_p1 );

    SC_METHOD(thread_data_out_V_d1);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( sext_ln728_1_fu_1114_p1 );
    sensitive << ( sext_ln728_3_fu_1148_p1 );

    SC_METHOD(thread_data_out_V_we0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_data_out_V_we1);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start);
    sensitive << ( grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start_reg );

    SC_METHOD(thread_grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start);
    sensitive << ( grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start_reg );

    SC_METHOD(thread_grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start);
    sensitive << ( grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start_reg );

    SC_METHOD(thread_grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start);
    sensitive << ( grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start_reg );

    SC_METHOD(thread_grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_0_V_read);
    sensitive << ( grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_0 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_1_V_read);
    sensitive << ( grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_1 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_2_V_read);
    sensitive << ( grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_2 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_3_V_read);
    sensitive << ( grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_3 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_4_V_read);
    sensitive << ( grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_4 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_transformer_fu_822_ap_start);
    sensitive << ( grp_transformer_fu_822_ap_start_reg );

    SC_METHOD(thread_log_table_i_address0);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_address0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln364_fu_1085_p1 );
    sensitive << ( zext_ln364_2_fu_1119_p1 );
    sensitive << ( zext_ln364_4_fu_1153_p1 );

    SC_METHOD(thread_log_table_i_address1);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_address1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln364_1_fu_1089_p1 );
    sensitive << ( zext_ln364_3_fu_1123_p1 );

    SC_METHOD(thread_log_table_i_ce0);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_ce0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_log_table_i_ce1);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_ce1 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_log_table_i_we0);
    sensitive << ( grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_we0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_log_table_i_we1);
    sensitive << ( grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_we1 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_mlp_dimensions_reduced_V_address0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_address0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_mlp_dimensions_reduced_V_address1);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_address1 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_mlp_dimensions_reduced_V_ce0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_ce0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_mlp_dimensions_reduced_V_ce1);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_ce1 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_mlp_dimensions_reduced_V_we0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_mlp_dimensions_reduced_V_we1);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_sext_ln728_1_fu_1114_p1);
    sensitive << ( shl_ln728_s_fu_1106_p3 );

    SC_METHOD(thread_sext_ln728_2_fu_1135_p1);
    sensitive << ( shl_ln728_1_fu_1127_p3 );

    SC_METHOD(thread_sext_ln728_3_fu_1148_p1);
    sensitive << ( shl_ln728_2_fu_1140_p3 );

    SC_METHOD(thread_sext_ln728_4_fu_1165_p1);
    sensitive << ( shl_ln728_3_fu_1157_p3 );

    SC_METHOD(thread_sext_ln728_fu_1101_p1);
    sensitive << ( shl_ln_fu_1093_p3 );

    SC_METHOD(thread_shl_ln728_1_fu_1127_p3);
    sensitive << ( log_table_i_q0 );

    SC_METHOD(thread_shl_ln728_2_fu_1140_p3);
    sensitive << ( log_table_i_q1 );

    SC_METHOD(thread_shl_ln728_3_fu_1157_p3);
    sensitive << ( log_table_i_q0 );

    SC_METHOD(thread_shl_ln728_s_fu_1106_p3);
    sensitive << ( log_table_i_q1 );

    SC_METHOD(thread_shl_ln_fu_1093_p3);
    sensitive << ( log_table_i_q0 );

    SC_METHOD(thread_transformer_0_out_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( grp_transformer_fu_822_res_V_address0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_transformer_0_out_address1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( grp_transformer_fu_822_res_V_address1 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_transformer_0_out_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( grp_transformer_fu_822_res_V_ce0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_transformer_0_out_ce1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( grp_transformer_fu_822_res_V_ce1 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_transformer_0_out_we0);
    sensitive << ( grp_transformer_fu_822_res_V_we0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_transformer_0_out_we1);
    sensitive << ( grp_transformer_fu_822_res_V_we1 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_zext_ln364_1_fu_1089_p1);
    sensitive << ( y_V_8_reg_1415 );

    SC_METHOD(thread_zext_ln364_2_fu_1119_p1);
    sensitive << ( y_V_9_reg_1420 );

    SC_METHOD(thread_zext_ln364_3_fu_1123_p1);
    sensitive << ( y_V_10_reg_1425 );

    SC_METHOD(thread_zext_ln364_4_fu_1153_p1);
    sensitive << ( y_V_11_reg_1430 );

    SC_METHOD(thread_zext_ln364_fu_1085_p1);
    sensitive << ( y_V_reg_1410 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_block_state15_on_subcall_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000000000000000000000000000000000000000000001";
    grp_transformer_fu_822_ap_start_reg = SC_LOGIC_0;
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start_reg = SC_LOGIC_0;
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start_reg = SC_LOGIC_0;
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start_reg = SC_LOGIC_0;
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "myproject_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_in_V_address0, "(port)data_in_V_address0");
    sc_trace(mVcdFile, data_in_V_ce0, "(port)data_in_V_ce0");
    sc_trace(mVcdFile, data_in_V_q0, "(port)data_in_V_q0");
    sc_trace(mVcdFile, data_in_V_address1, "(port)data_in_V_address1");
    sc_trace(mVcdFile, data_in_V_ce1, "(port)data_in_V_ce1");
    sc_trace(mVcdFile, data_in_V_q1, "(port)data_in_V_q1");
    sc_trace(mVcdFile, data_out_V_address0, "(port)data_out_V_address0");
    sc_trace(mVcdFile, data_out_V_ce0, "(port)data_out_V_ce0");
    sc_trace(mVcdFile, data_out_V_we0, "(port)data_out_V_we0");
    sc_trace(mVcdFile, data_out_V_d0, "(port)data_out_V_d0");
    sc_trace(mVcdFile, data_out_V_address1, "(port)data_out_V_address1");
    sc_trace(mVcdFile, data_out_V_ce1, "(port)data_out_V_ce1");
    sc_trace(mVcdFile, data_out_V_we1, "(port)data_out_V_we1");
    sc_trace(mVcdFile, data_out_V_d1, "(port)data_out_V_d1");
    sc_trace(mVcdFile, const_size_in_1, "(port)const_size_in_1");
    sc_trace(mVcdFile, const_size_in_1_ap_vld, "(port)const_size_in_1_ap_vld");
    sc_trace(mVcdFile, const_size_out_1, "(port)const_size_out_1");
    sc_trace(mVcdFile, const_size_out_1_ap_vld, "(port)const_size_out_1_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, embedded_with_cls_1_V_reg_1170, "embedded_with_cls_1_V_reg_1170");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, embedded_with_cls_3_V_reg_1175, "embedded_with_cls_3_V_reg_1175");
    sc_trace(mVcdFile, embedded_with_cls_5_V_reg_1180, "embedded_with_cls_5_V_reg_1180");
    sc_trace(mVcdFile, embedded_with_cls_7_V_reg_1185, "embedded_with_cls_7_V_reg_1185");
    sc_trace(mVcdFile, embedded_with_cls_9_V_reg_1190, "embedded_with_cls_9_V_reg_1190");
    sc_trace(mVcdFile, embedded_with_cls_11_V_reg_1195, "embedded_with_cls_11_V_reg_1195");
    sc_trace(mVcdFile, embedded_with_cls_13_V_reg_1200, "embedded_with_cls_13_V_reg_1200");
    sc_trace(mVcdFile, embedded_with_cls_15_V_reg_1205, "embedded_with_cls_15_V_reg_1205");
    sc_trace(mVcdFile, embedded_with_cls_17_V_reg_1210, "embedded_with_cls_17_V_reg_1210");
    sc_trace(mVcdFile, embedded_with_cls_19_V_reg_1215, "embedded_with_cls_19_V_reg_1215");
    sc_trace(mVcdFile, embedded_with_cls_21_V_reg_1220, "embedded_with_cls_21_V_reg_1220");
    sc_trace(mVcdFile, embedded_with_cls_23_V_reg_1225, "embedded_with_cls_23_V_reg_1225");
    sc_trace(mVcdFile, embedded_with_cls_25_V_reg_1230, "embedded_with_cls_25_V_reg_1230");
    sc_trace(mVcdFile, embedded_with_cls_27_V_reg_1235, "embedded_with_cls_27_V_reg_1235");
    sc_trace(mVcdFile, embedded_with_cls_29_V_reg_1240, "embedded_with_cls_29_V_reg_1240");
    sc_trace(mVcdFile, embedded_with_cls_31_V_reg_1245, "embedded_with_cls_31_V_reg_1245");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, y_V_reg_1410, "y_V_reg_1410");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, y_V_8_reg_1415, "y_V_8_reg_1415");
    sc_trace(mVcdFile, y_V_9_reg_1420, "y_V_9_reg_1420");
    sc_trace(mVcdFile, y_V_10_reg_1425, "y_V_10_reg_1425");
    sc_trace(mVcdFile, y_V_11_reg_1430, "y_V_11_reg_1430");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, log_table_i_address0, "log_table_i_address0");
    sc_trace(mVcdFile, log_table_i_ce0, "log_table_i_ce0");
    sc_trace(mVcdFile, log_table_i_we0, "log_table_i_we0");
    sc_trace(mVcdFile, log_table_i_q0, "log_table_i_q0");
    sc_trace(mVcdFile, log_table_i_address1, "log_table_i_address1");
    sc_trace(mVcdFile, log_table_i_ce1, "log_table_i_ce1");
    sc_trace(mVcdFile, log_table_i_we1, "log_table_i_we1");
    sc_trace(mVcdFile, log_table_i_q1, "log_table_i_q1");
    sc_trace(mVcdFile, transformer_0_out_address0, "transformer_0_out_address0");
    sc_trace(mVcdFile, transformer_0_out_ce0, "transformer_0_out_ce0");
    sc_trace(mVcdFile, transformer_0_out_we0, "transformer_0_out_we0");
    sc_trace(mVcdFile, transformer_0_out_q0, "transformer_0_out_q0");
    sc_trace(mVcdFile, transformer_0_out_address1, "transformer_0_out_address1");
    sc_trace(mVcdFile, transformer_0_out_ce1, "transformer_0_out_ce1");
    sc_trace(mVcdFile, transformer_0_out_we1, "transformer_0_out_we1");
    sc_trace(mVcdFile, transformer_0_out_q1, "transformer_0_out_q1");
    sc_trace(mVcdFile, mlp_dimensions_reduced_V_address0, "mlp_dimensions_reduced_V_address0");
    sc_trace(mVcdFile, mlp_dimensions_reduced_V_ce0, "mlp_dimensions_reduced_V_ce0");
    sc_trace(mVcdFile, mlp_dimensions_reduced_V_we0, "mlp_dimensions_reduced_V_we0");
    sc_trace(mVcdFile, mlp_dimensions_reduced_V_q0, "mlp_dimensions_reduced_V_q0");
    sc_trace(mVcdFile, mlp_dimensions_reduced_V_address1, "mlp_dimensions_reduced_V_address1");
    sc_trace(mVcdFile, mlp_dimensions_reduced_V_ce1, "mlp_dimensions_reduced_V_ce1");
    sc_trace(mVcdFile, mlp_dimensions_reduced_V_we1, "mlp_dimensions_reduced_V_we1");
    sc_trace(mVcdFile, mlp_dimensions_reduced_V_q1, "mlp_dimensions_reduced_V_q1");
    sc_trace(mVcdFile, grp_transformer_fu_822_ap_start, "grp_transformer_fu_822_ap_start");
    sc_trace(mVcdFile, grp_transformer_fu_822_ap_done, "grp_transformer_fu_822_ap_done");
    sc_trace(mVcdFile, grp_transformer_fu_822_ap_idle, "grp_transformer_fu_822_ap_idle");
    sc_trace(mVcdFile, grp_transformer_fu_822_ap_ready, "grp_transformer_fu_822_ap_ready");
    sc_trace(mVcdFile, grp_transformer_fu_822_res_V_address0, "grp_transformer_fu_822_res_V_address0");
    sc_trace(mVcdFile, grp_transformer_fu_822_res_V_ce0, "grp_transformer_fu_822_res_V_ce0");
    sc_trace(mVcdFile, grp_transformer_fu_822_res_V_we0, "grp_transformer_fu_822_res_V_we0");
    sc_trace(mVcdFile, grp_transformer_fu_822_res_V_d0, "grp_transformer_fu_822_res_V_d0");
    sc_trace(mVcdFile, grp_transformer_fu_822_res_V_address1, "grp_transformer_fu_822_res_V_address1");
    sc_trace(mVcdFile, grp_transformer_fu_822_res_V_ce1, "grp_transformer_fu_822_res_V_ce1");
    sc_trace(mVcdFile, grp_transformer_fu_822_res_V_we1, "grp_transformer_fu_822_res_V_we1");
    sc_trace(mVcdFile, grp_transformer_fu_822_res_V_d1, "grp_transformer_fu_822_res_V_d1");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_done, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_done");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_idle, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_idle");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_ready, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_ready");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_address0, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_address0");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_ce0, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_ce0");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_address1, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_address1");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_ce1, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_ce1");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_0, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_0");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_1, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_1");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_2, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_2");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_3, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_3");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_4, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_4");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_5, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_5");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_6, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_6");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_7, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_7");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_8, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_8");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_9, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_9");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_10, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_10");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_11, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_11");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_12, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_12");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_13, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_13");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_14, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_14");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_15, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_15");
    sc_trace(mVcdFile, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start, "grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start");
    sc_trace(mVcdFile, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_done, "grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_done");
    sc_trace(mVcdFile, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_idle, "grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_idle");
    sc_trace(mVcdFile, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_ready, "grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_ready");
    sc_trace(mVcdFile, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_address0, "grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_address0");
    sc_trace(mVcdFile, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_ce0, "grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_ce0");
    sc_trace(mVcdFile, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_we0, "grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_we0");
    sc_trace(mVcdFile, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_d0, "grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_d0");
    sc_trace(mVcdFile, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_address1, "grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_address1");
    sc_trace(mVcdFile, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_ce1, "grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_ce1");
    sc_trace(mVcdFile, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_we1, "grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_we1");
    sc_trace(mVcdFile, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_d1, "grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_d1");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_done, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_done");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_idle, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_idle");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_ready, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_ready");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_address0, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_address0");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_ce0, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_ce0");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_address1, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_address1");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_ce1, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_ce1");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_0, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_0");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_1, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_1");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_2, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_2");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_3, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_3");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_4, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_4");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_done, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_done");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_idle, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_idle");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_ready, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_ready");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_0_V_read, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_0_V_read");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_1_V_read, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_1_V_read");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_2_V_read, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_2_V_read");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_3_V_read, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_3_V_read");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_4_V_read, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_4_V_read");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_0, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_0");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_1, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_1");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_2, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_2");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_3, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_3");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_4, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_4");
    sc_trace(mVcdFile, grp_transformer_fu_822_ap_start_reg, "grp_transformer_fu_822_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start_reg, "grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_NS_fsm_state4, "ap_NS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start_reg, "grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start_reg");
    sc_trace(mVcdFile, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start_reg, "grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_NS_fsm_state33, "ap_NS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start_reg, "grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start_reg");
    sc_trace(mVcdFile, ap_NS_fsm_state42, "ap_NS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, zext_ln364_fu_1085_p1, "zext_ln364_fu_1085_p1");
    sc_trace(mVcdFile, zext_ln364_1_fu_1089_p1, "zext_ln364_1_fu_1089_p1");
    sc_trace(mVcdFile, zext_ln364_2_fu_1119_p1, "zext_ln364_2_fu_1119_p1");
    sc_trace(mVcdFile, zext_ln364_3_fu_1123_p1, "zext_ln364_3_fu_1123_p1");
    sc_trace(mVcdFile, zext_ln364_4_fu_1153_p1, "zext_ln364_4_fu_1153_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, sext_ln728_fu_1101_p1, "sext_ln728_fu_1101_p1");
    sc_trace(mVcdFile, sext_ln728_1_fu_1114_p1, "sext_ln728_1_fu_1114_p1");
    sc_trace(mVcdFile, sext_ln728_2_fu_1135_p1, "sext_ln728_2_fu_1135_p1");
    sc_trace(mVcdFile, sext_ln728_3_fu_1148_p1, "sext_ln728_3_fu_1148_p1");
    sc_trace(mVcdFile, sext_ln728_4_fu_1165_p1, "sext_ln728_4_fu_1165_p1");
    sc_trace(mVcdFile, shl_ln_fu_1093_p3, "shl_ln_fu_1093_p3");
    sc_trace(mVcdFile, shl_ln728_s_fu_1106_p3, "shl_ln728_s_fu_1106_p3");
    sc_trace(mVcdFile, shl_ln728_1_fu_1127_p3, "shl_ln728_1_fu_1127_p3");
    sc_trace(mVcdFile, shl_ln728_2_fu_1140_p3, "shl_ln728_2_fu_1140_p3");
    sc_trace(mVcdFile, shl_ln728_3_fu_1157_p3, "shl_ln728_3_fu_1157_p3");
    sc_trace(mVcdFile, ap_block_state15_on_subcall_done, "ap_block_state15_on_subcall_done");
#endif

    }
    mHdltvinHandle.open("myproject.hdltvin.dat");
    mHdltvoutHandle.open("myproject.hdltvout.dat");
}

myproject::~myproject() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete log_table_i_U;
    delete transformer_0_out_U;
    delete mlp_dimensions_reduced_V_U;
    delete grp_transformer_fu_822;
    delete grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847;
    delete grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853;
    delete grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858;
    delete grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863;
}

void myproject::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state4.read()))) {
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_ready.read())) {
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state33.read()))) {
            grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_ready.read())) {
            grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
            grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_ready.read())) {
            grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state42.read()))) {
            grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_ready.read())) {
            grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_transformer_fu_822_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
            grp_transformer_fu_822_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_transformer_fu_822_ap_ready.read())) {
            grp_transformer_fu_822_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        embedded_with_cls_11_V_reg_1195 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_5.read();
        embedded_with_cls_13_V_reg_1200 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_6.read();
        embedded_with_cls_15_V_reg_1205 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_7.read();
        embedded_with_cls_17_V_reg_1210 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_8.read();
        embedded_with_cls_19_V_reg_1215 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_9.read();
        embedded_with_cls_1_V_reg_1170 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_0.read();
        embedded_with_cls_21_V_reg_1220 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_10.read();
        embedded_with_cls_23_V_reg_1225 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_11.read();
        embedded_with_cls_25_V_reg_1230 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_12.read();
        embedded_with_cls_27_V_reg_1235 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_13.read();
        embedded_with_cls_29_V_reg_1240 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_14.read();
        embedded_with_cls_31_V_reg_1245 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_15.read();
        embedded_with_cls_3_V_reg_1175 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_1.read();
        embedded_with_cls_5_V_reg_1180 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_2.read();
        embedded_with_cls_7_V_reg_1185 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_3.read();
        embedded_with_cls_9_V_reg_1190 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_return_4.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        y_V_10_reg_1425 = grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_3.read().range(15, 4);
        y_V_11_reg_1430 = grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_4.read().range(15, 4);
        y_V_8_reg_1415 = grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_1.read().range(15, 4);
        y_V_9_reg_1420 = grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_2.read().range(15, 4);
        y_V_reg_1410 = grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_return_0.read().range(15, 4);
    }
}

void myproject::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void myproject::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void myproject::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void myproject::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void myproject::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void myproject::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void myproject::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void myproject::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void myproject::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void myproject::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void myproject::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void myproject::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void myproject::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void myproject::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void myproject::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void myproject::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void myproject::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void myproject::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void myproject::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void myproject::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void myproject::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void myproject::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void myproject::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void myproject::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void myproject::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void myproject::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void myproject::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void myproject::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void myproject::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void myproject::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void myproject::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void myproject::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void myproject::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void myproject::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void myproject::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void myproject::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void myproject::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void myproject::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void myproject::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void myproject::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void myproject::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void myproject::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void myproject::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void myproject::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void myproject::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void myproject::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void myproject::thread_ap_NS_fsm_state33() {
    ap_NS_fsm_state33 = ap_NS_fsm.read()[32];
}

void myproject::thread_ap_NS_fsm_state4() {
    ap_NS_fsm_state4 = ap_NS_fsm.read()[3];
}

void myproject::thread_ap_NS_fsm_state42() {
    ap_NS_fsm_state42 = ap_NS_fsm.read()[41];
}

void myproject::thread_ap_block_state15_on_subcall_done() {
    ap_block_state15_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_transformer_fu_822_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_done.read()));
}

void myproject::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void myproject::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void myproject::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void myproject::thread_const_size_in_1() {
    const_size_in_1 = ap_const_lv16_10;
}

void myproject::thread_const_size_in_1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        const_size_in_1_ap_vld = ap_const_logic_1;
    } else {
        const_size_in_1_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_const_size_out_1() {
    const_size_out_1 = ap_const_lv16_5;
}

void myproject::thread_const_size_out_1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        const_size_out_1_ap_vld = ap_const_logic_1;
    } else {
        const_size_out_1_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_data_in_V_address0() {
    data_in_V_address0 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_address0.read();
}

void myproject::thread_data_in_V_address1() {
    data_in_V_address1 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_address1.read();
}

void myproject::thread_data_in_V_ce0() {
    data_in_V_ce0 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_ce0.read();
}

void myproject::thread_data_in_V_ce1() {
    data_in_V_ce1 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_data_V_ce1.read();
}

void myproject::thread_data_out_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        data_out_V_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_out_V_address0 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        data_out_V_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else {
        data_out_V_address0 = "XXX";
    }
}

void myproject::thread_data_out_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_out_V_address1 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        data_out_V_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else {
        data_out_V_address1 = "XXX";
    }
}

void myproject::thread_data_out_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        data_out_V_ce0 = ap_const_logic_1;
    } else {
        data_out_V_ce0 = ap_const_logic_0;
    }
}

void myproject::thread_data_out_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        data_out_V_ce1 = ap_const_logic_1;
    } else {
        data_out_V_ce1 = ap_const_logic_0;
    }
}

void myproject::thread_data_out_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        data_out_V_d0 = sext_ln728_4_fu_1165_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_out_V_d0 = sext_ln728_2_fu_1135_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        data_out_V_d0 = sext_ln728_fu_1101_p1.read();
    } else {
        data_out_V_d0 =  (sc_lv<35>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void myproject::thread_data_out_V_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        data_out_V_d1 = sext_ln728_3_fu_1148_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        data_out_V_d1 = sext_ln728_1_fu_1114_p1.read();
    } else {
        data_out_V_d1 =  (sc_lv<35>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void myproject::thread_data_out_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        data_out_V_we0 = ap_const_logic_1;
    } else {
        data_out_V_we0 = ap_const_logic_0;
    }
}

void myproject::thread_data_out_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        data_out_V_we1 = ap_const_logic_1;
    } else {
        data_out_V_we1 = ap_const_logic_0;
    }
}

void myproject::thread_grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start() {
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_847_ap_start_reg.read();
}

void myproject::thread_grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start() {
    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_start_reg.read();
}

void myproject::thread_grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start() {
    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_ap_start_reg.read();
}

void myproject::thread_grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start() {
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start = grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_ap_start_reg.read();
}

void myproject::thread_grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_0_V_read() {
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_0_V_read = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_0.read().range(25, 10);
}

void myproject::thread_grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_1_V_read() {
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_1_V_read = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_1.read().range(25, 10);
}

void myproject::thread_grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_2_V_read() {
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_2_V_read = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_2.read().range(25, 10);
}

void myproject::thread_grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_3_V_read() {
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_3_V_read = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_3.read().range(25, 10);
}

void myproject::thread_grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_4_V_read() {
    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_863_data_4_V_read = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_ap_return_4.read().range(25, 10);
}

void myproject::thread_grp_transformer_fu_822_ap_start() {
    grp_transformer_fu_822_ap_start = grp_transformer_fu_822_ap_start_reg.read();
}

void myproject::thread_log_table_i_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        log_table_i_address0 =  (sc_lv<12>) (zext_ln364_4_fu_1153_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        log_table_i_address0 =  (sc_lv<12>) (zext_ln364_2_fu_1119_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        log_table_i_address0 =  (sc_lv<12>) (zext_ln364_fu_1085_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        log_table_i_address0 = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_address0.read();
    } else {
        log_table_i_address0 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void myproject::thread_log_table_i_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        log_table_i_address1 =  (sc_lv<12>) (zext_ln364_3_fu_1123_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        log_table_i_address1 =  (sc_lv<12>) (zext_ln364_1_fu_1089_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        log_table_i_address1 = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_address1.read();
    } else {
        log_table_i_address1 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void myproject::thread_log_table_i_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        log_table_i_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        log_table_i_ce0 = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_ce0.read();
    } else {
        log_table_i_ce0 = ap_const_logic_0;
    }
}

void myproject::thread_log_table_i_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        log_table_i_ce1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        log_table_i_ce1 = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_ce1.read();
    } else {
        log_table_i_ce1 = ap_const_logic_0;
    }
}

void myproject::thread_log_table_i_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        log_table_i_we0 = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_we0.read();
    } else {
        log_table_i_we0 = ap_const_logic_0;
    }
}

void myproject::thread_log_table_i_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        log_table_i_we1 = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_853_table_out_V_we1.read();
    } else {
        log_table_i_we1 = ap_const_logic_0;
    }
}

void myproject::thread_mlp_dimensions_reduced_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        mlp_dimensions_reduced_V_address0 = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_address0.read();
    } else {
        mlp_dimensions_reduced_V_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void myproject::thread_mlp_dimensions_reduced_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        mlp_dimensions_reduced_V_address1 = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_address1.read();
    } else {
        mlp_dimensions_reduced_V_address1 =  (sc_lv<4>) ("XXXX");
    }
}

void myproject::thread_mlp_dimensions_reduced_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        mlp_dimensions_reduced_V_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        mlp_dimensions_reduced_V_ce0 = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_ce0.read();
    } else {
        mlp_dimensions_reduced_V_ce0 = ap_const_logic_0;
    }
}

void myproject::thread_mlp_dimensions_reduced_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        mlp_dimensions_reduced_V_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        mlp_dimensions_reduced_V_ce1 = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_858_data_V_ce1.read();
    } else {
        mlp_dimensions_reduced_V_ce1 = ap_const_logic_0;
    }
}

void myproject::thread_mlp_dimensions_reduced_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        mlp_dimensions_reduced_V_we0 = ap_const_logic_1;
    } else {
        mlp_dimensions_reduced_V_we0 = ap_const_logic_0;
    }
}

void myproject::thread_mlp_dimensions_reduced_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        mlp_dimensions_reduced_V_we1 = ap_const_logic_1;
    } else {
        mlp_dimensions_reduced_V_we1 = ap_const_logic_0;
    }
}

void myproject::thread_sext_ln728_1_fu_1114_p1() {
    sext_ln728_1_fu_1114_p1 = esl_sext<35,26>(shl_ln728_s_fu_1106_p3.read());
}

void myproject::thread_sext_ln728_2_fu_1135_p1() {
    sext_ln728_2_fu_1135_p1 = esl_sext<35,26>(shl_ln728_1_fu_1127_p3.read());
}

void myproject::thread_sext_ln728_3_fu_1148_p1() {
    sext_ln728_3_fu_1148_p1 = esl_sext<35,26>(shl_ln728_2_fu_1140_p3.read());
}

void myproject::thread_sext_ln728_4_fu_1165_p1() {
    sext_ln728_4_fu_1165_p1 = esl_sext<35,26>(shl_ln728_3_fu_1157_p3.read());
}

void myproject::thread_sext_ln728_fu_1101_p1() {
    sext_ln728_fu_1101_p1 = esl_sext<35,26>(shl_ln_fu_1093_p3.read());
}

void myproject::thread_shl_ln728_1_fu_1127_p3() {
    shl_ln728_1_fu_1127_p3 = esl_concat<16,10>(log_table_i_q0.read(), ap_const_lv10_0);
}

void myproject::thread_shl_ln728_2_fu_1140_p3() {
    shl_ln728_2_fu_1140_p3 = esl_concat<16,10>(log_table_i_q1.read(), ap_const_lv10_0);
}

void myproject::thread_shl_ln728_3_fu_1157_p3() {
    shl_ln728_3_fu_1157_p3 = esl_concat<16,10>(log_table_i_q0.read(), ap_const_lv10_0);
}

void myproject::thread_shl_ln728_s_fu_1106_p3() {
    shl_ln728_s_fu_1106_p3 = esl_concat<16,10>(log_table_i_q1.read(), ap_const_lv10_0);
}

void myproject::thread_shl_ln_fu_1093_p3() {
    shl_ln_fu_1093_p3 = esl_concat<16,10>(log_table_i_q0.read(), ap_const_lv10_0);
}

void myproject::thread_transformer_0_out_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_3C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_38);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_34);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_30);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_2C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_28);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_24);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_20);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        transformer_0_out_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        transformer_0_out_address0 = grp_transformer_fu_822_res_V_address0.read();
    } else {
        transformer_0_out_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void myproject::thread_transformer_0_out_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_3E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_3A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_36);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_32);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_2E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_2A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_26);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_22);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        transformer_0_out_address1 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        transformer_0_out_address1 = grp_transformer_fu_822_res_V_address1.read();
    } else {
        transformer_0_out_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void myproject::thread_transformer_0_out_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        transformer_0_out_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        transformer_0_out_ce0 = grp_transformer_fu_822_res_V_ce0.read();
    } else {
        transformer_0_out_ce0 = ap_const_logic_0;
    }
}

void myproject::thread_transformer_0_out_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        transformer_0_out_ce1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        transformer_0_out_ce1 = grp_transformer_fu_822_res_V_ce1.read();
    } else {
        transformer_0_out_ce1 = ap_const_logic_0;
    }
}

void myproject::thread_transformer_0_out_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        transformer_0_out_we0 = grp_transformer_fu_822_res_V_we0.read();
    } else {
        transformer_0_out_we0 = ap_const_logic_0;
    }
}

void myproject::thread_transformer_0_out_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        transformer_0_out_we1 = grp_transformer_fu_822_res_V_we1.read();
    } else {
        transformer_0_out_we1 = ap_const_logic_0;
    }
}

void myproject::thread_zext_ln364_1_fu_1089_p1() {
    zext_ln364_1_fu_1089_p1 = esl_zext<64,12>(y_V_8_reg_1415.read());
}

void myproject::thread_zext_ln364_2_fu_1119_p1() {
    zext_ln364_2_fu_1119_p1 = esl_zext<64,12>(y_V_9_reg_1420.read());
}

void myproject::thread_zext_ln364_3_fu_1123_p1() {
    zext_ln364_3_fu_1123_p1 = esl_zext<64,12>(y_V_10_reg_1425.read());
}

void myproject::thread_zext_ln364_4_fu_1153_p1() {
    zext_ln364_4_fu_1153_p1 = esl_zext<64,12>(y_V_11_reg_1430.read());
}

void myproject::thread_zext_ln364_fu_1085_p1() {
    zext_ln364_fu_1085_p1 = esl_zext<64,12>(y_V_reg_1410.read());
}

void myproject::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_block_state15_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<48>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void myproject::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_in_V_address0\" :  \"" << data_in_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_in_V_ce0\" :  \"" << data_in_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_V_q0\" :  \"" << data_in_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_in_V_address1\" :  \"" << data_in_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_in_V_ce1\" :  \"" << data_in_V_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_V_q1\" :  \"" << data_in_V_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_V_address0\" :  \"" << data_out_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_V_ce0\" :  \"" << data_out_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_V_we0\" :  \"" << data_out_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_V_d0\" :  \"" << data_out_V_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_V_address1\" :  \"" << data_out_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_V_ce1\" :  \"" << data_out_V_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_V_we1\" :  \"" << data_out_V_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_V_d1\" :  \"" << data_out_V_d1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"const_size_in_1\" :  \"" << const_size_in_1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"const_size_in_1_ap_vld\" :  \"" << const_size_in_1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"const_size_out_1\" :  \"" << const_size_out_1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"const_size_out_1_ap_vld\" :  \"" << const_size_out_1_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

