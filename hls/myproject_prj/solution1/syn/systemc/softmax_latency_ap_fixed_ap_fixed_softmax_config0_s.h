// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_HH_
#define _softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_mul_mul_16s_16s_26_1_1.h"
#include "softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_exp_tdEe.h"
#include "softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s_incud.h"

namespace ap_rtl {

struct softmax_latency_ap_fixed_ap_fixed_softmax_config0_s : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > data_0_V_read;
    sc_in< sc_lv<16> > data_1_V_read;
    sc_in< sc_lv<16> > data_2_V_read;
    sc_in< sc_lv<16> > data_3_V_read;
    sc_in< sc_lv<16> > data_4_V_read;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;
    sc_out< sc_lv<16> > ap_return_2;
    sc_out< sc_lv<16> > ap_return_3;
    sc_out< sc_lv<16> > ap_return_4;


    // Module declarations
    softmax_latency_ap_fixed_ap_fixed_softmax_config0_s(sc_module_name name);
    SC_HAS_PROCESS(softmax_latency_ap_fixed_ap_fixed_softmax_config0_s);

    ~softmax_latency_ap_fixed_ap_fixed_softmax_config0_s();

    sc_trace_file* mVcdFile;

    softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_exp_tdEe* exp_table3_U;
    softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s_incud* invert_table4_U;
    myproject_mul_mul_16s_16s_26_1_1<1,1,16,16,26>* myproject_mul_mul_16s_16s_26_1_1_U1028;
    myproject_mul_mul_16s_16s_26_1_1<1,1,16,16,26>* myproject_mul_mul_16s_16s_26_1_1_U1029;
    myproject_mul_mul_16s_16s_26_1_1<1,1,16,16,26>* myproject_mul_mul_16s_16s_26_1_1_U1030;
    myproject_mul_mul_16s_16s_26_1_1<1,1,16,16,26>* myproject_mul_mul_16s_16s_26_1_1_U1031;
    myproject_mul_mul_16s_16s_26_1_1<1,1,16,16,26>* myproject_mul_mul_16s_16s_26_1_1_U1032;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<12> > exp_table3_address0;
    sc_signal< sc_logic > exp_table3_ce0;
    sc_signal< sc_lv<16> > exp_table3_q0;
    sc_signal< sc_lv<12> > exp_table3_address1;
    sc_signal< sc_logic > exp_table3_ce1;
    sc_signal< sc_lv<16> > exp_table3_q1;
    sc_signal< sc_lv<12> > exp_table3_address2;
    sc_signal< sc_logic > exp_table3_ce2;
    sc_signal< sc_lv<16> > exp_table3_q2;
    sc_signal< sc_lv<12> > exp_table3_address3;
    sc_signal< sc_logic > exp_table3_ce3;
    sc_signal< sc_lv<16> > exp_table3_q3;
    sc_signal< sc_lv<12> > exp_table3_address4;
    sc_signal< sc_logic > exp_table3_ce4;
    sc_signal< sc_lv<16> > exp_table3_q4;
    sc_signal< sc_lv<12> > invert_table4_address0;
    sc_signal< sc_logic > invert_table4_ce0;
    sc_signal< sc_lv<16> > invert_table4_q0;
    sc_signal< sc_lv<16> > exp_res_0_V_reg_414;
    sc_signal< sc_lv<16> > exp_res_1_V_reg_419;
    sc_signal< sc_lv<16> > exp_res_2_V_reg_424;
    sc_signal< sc_lv<16> > exp_res_3_V_reg_429;
    sc_signal< sc_lv<16> > exp_res_4_V_reg_434;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln307_fu_156_p1;
    sc_signal< sc_lv<64> > zext_ln307_1_fu_171_p1;
    sc_signal< sc_lv<64> > zext_ln307_2_fu_186_p1;
    sc_signal< sc_lv<64> > zext_ln307_3_fu_201_p1;
    sc_signal< sc_lv<64> > zext_ln307_4_fu_216_p1;
    sc_signal< sc_lv<64> > zext_ln319_fu_255_p1;
    sc_signal< sc_lv<12> > y_V_fu_146_p4;
    sc_signal< sc_lv<12> > y_V_1_fu_161_p4;
    sc_signal< sc_lv<12> > y_V_2_fu_176_p4;
    sc_signal< sc_lv<12> > y_V_3_fu_191_p4;
    sc_signal< sc_lv<12> > y_V_4_fu_206_p4;
    sc_signal< sc_lv<16> > add_ln703_fu_221_p0;
    sc_signal< sc_lv<16> > add_ln703_fu_221_p1;
    sc_signal< sc_lv<16> > add_ln703_32_fu_227_p0;
    sc_signal< sc_lv<16> > add_ln703_32_fu_227_p1;
    sc_signal< sc_lv<16> > add_ln703_32_fu_227_p2;
    sc_signal< sc_lv<16> > add_ln703_33_fu_233_p1;
    sc_signal< sc_lv<16> > add_ln703_33_fu_233_p2;
    sc_signal< sc_lv<16> > add_ln703_fu_221_p2;
    sc_signal< sc_lv<16> > exp_sum_V_fu_239_p2;
    sc_signal< sc_lv<12> > y_V_5_fu_245_p4;
    sc_signal< sc_lv<26> > mul_ln1118_fu_354_p2;
    sc_signal< sc_lv<26> > mul_ln1118_1_fu_361_p2;
    sc_signal< sc_lv<26> > mul_ln1118_2_fu_368_p2;
    sc_signal< sc_lv<26> > mul_ln1118_3_fu_375_p2;
    sc_signal< sc_lv<26> > mul_ln1118_4_fu_382_p2;
    sc_signal< sc_lv<16> > mul_ln1118_fu_354_p0;
    sc_signal< sc_lv<26> > sext_ln1116_fu_260_p1;
    sc_signal< sc_lv<16> > mul_ln1118_1_fu_361_p0;
    sc_signal< sc_lv<16> > mul_ln1118_2_fu_368_p0;
    sc_signal< sc_lv<16> > mul_ln1118_3_fu_375_p0;
    sc_signal< sc_lv<16> > mul_ln1118_4_fu_382_p0;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln703_32_fu_227_p0();
    void thread_add_ln703_32_fu_227_p1();
    void thread_add_ln703_32_fu_227_p2();
    void thread_add_ln703_33_fu_233_p1();
    void thread_add_ln703_33_fu_233_p2();
    void thread_add_ln703_fu_221_p0();
    void thread_add_ln703_fu_221_p1();
    void thread_add_ln703_fu_221_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_exp_sum_V_fu_239_p2();
    void thread_exp_table3_address0();
    void thread_exp_table3_address1();
    void thread_exp_table3_address2();
    void thread_exp_table3_address3();
    void thread_exp_table3_address4();
    void thread_exp_table3_ce0();
    void thread_exp_table3_ce1();
    void thread_exp_table3_ce2();
    void thread_exp_table3_ce3();
    void thread_exp_table3_ce4();
    void thread_invert_table4_address0();
    void thread_invert_table4_ce0();
    void thread_mul_ln1118_1_fu_361_p0();
    void thread_mul_ln1118_2_fu_368_p0();
    void thread_mul_ln1118_3_fu_375_p0();
    void thread_mul_ln1118_4_fu_382_p0();
    void thread_mul_ln1118_fu_354_p0();
    void thread_sext_ln1116_fu_260_p1();
    void thread_y_V_1_fu_161_p4();
    void thread_y_V_2_fu_176_p4();
    void thread_y_V_3_fu_191_p4();
    void thread_y_V_4_fu_206_p4();
    void thread_y_V_5_fu_245_p4();
    void thread_y_V_fu_146_p4();
    void thread_zext_ln307_1_fu_171_p1();
    void thread_zext_ln307_2_fu_186_p1();
    void thread_zext_ln307_3_fu_201_p1();
    void thread_zext_ln307_4_fu_216_p1();
    void thread_zext_ln307_fu_156_p1();
    void thread_zext_ln319_fu_255_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
