// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s_HH_
#define _softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_mul_mul_16s_16s_32_1_1.h"
#include "softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s_exbkb.h"
#include "softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s_incud.h"

namespace ap_rtl {

struct softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_out< sc_lv<3> > data_V_address0;
    sc_out< sc_logic > data_V_ce0;
    sc_in< sc_lv<16> > data_V_q0;
    sc_out< sc_lv<3> > data_V_address1;
    sc_out< sc_logic > data_V_ce1;
    sc_in< sc_lv<16> > data_V_q1;
    sc_in< sc_lv<1> > data_V_offset;
    sc_in< sc_lv<1> > data_V_offset1;
    sc_out< sc_lv<3> > res_V_address0;
    sc_out< sc_logic > res_V_ce0;
    sc_out< sc_logic > res_V_we0;
    sc_out< sc_lv<32> > res_V_d0;
    sc_out< sc_lv<3> > res_V_address1;
    sc_out< sc_logic > res_V_ce1;
    sc_out< sc_logic > res_V_we1;
    sc_out< sc_lv<32> > res_V_d1;
    sc_in< sc_lv<1> > res_V_offset;
    sc_in< sc_lv<1> > res_V_offset3;


    // Module declarations
    softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s(sc_module_name name);
    SC_HAS_PROCESS(softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s);

    ~softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s();

    sc_trace_file* mVcdFile;

    softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s_exbkb* exp_table12_U;
    softmax_latency_ap_fixed_ap_fixed_sa_softmax_config0_s_incud* invert_table13_U;
    myproject_mul_mul_16s_16s_32_1_1<1,1,16,16,32>* myproject_mul_mul_16s_16s_32_1_1_U410;
    myproject_mul_mul_16s_16s_32_1_1<1,1,16,16,32>* myproject_mul_mul_16s_16s_32_1_1_U411;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<12> > exp_table12_address0;
    sc_signal< sc_logic > exp_table12_ce0;
    sc_signal< sc_lv<16> > exp_table12_q0;
    sc_signal< sc_lv<12> > exp_table12_address1;
    sc_signal< sc_logic > exp_table12_ce1;
    sc_signal< sc_lv<16> > exp_table12_q1;
    sc_signal< sc_lv<12> > invert_table13_address0;
    sc_signal< sc_logic > invert_table13_ce0;
    sc_signal< sc_lv<16> > invert_table13_q0;
    sc_signal< sc_lv<1> > res_V_offset3_read_reg_291;
    sc_signal< sc_lv<1> > res_V_offset3_read_reg_291_pp0_iter1_reg;
    sc_signal< sc_lv<1> > res_V_offset3_read_reg_291_pp0_iter2_reg;
    sc_signal< sc_lv<1> > res_V_offset_read_reg_296;
    sc_signal< sc_lv<1> > res_V_offset_read_reg_296_pp0_iter1_reg;
    sc_signal< sc_lv<1> > res_V_offset_read_reg_296_pp0_iter2_reg;
    sc_signal< sc_lv<16> > exp_res_0_V_reg_321;
    sc_signal< sc_lv<16> > exp_res_1_V_reg_326;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln329_fu_168_p1;
    sc_signal< sc_lv<64> > tmp_3_fu_179_p3;
    sc_signal< sc_lv<64> > zext_ln330_fu_198_p1;
    sc_signal< sc_lv<64> > zext_ln330_1_fu_213_p1;
    sc_signal< sc_lv<64> > zext_ln342_fu_234_p1;
    sc_signal< sc_lv<64> > zext_ln203_fu_247_p1;
    sc_signal< sc_lv<64> > tmp_1_fu_258_p3;
    sc_signal< sc_lv<32> > mul_ln1118_fu_277_p2;
    sc_signal< sc_lv<32> > mul_ln1118_1_fu_284_p2;
    sc_signal< sc_lv<3> > tmp_2_fu_158_p4;
    sc_signal< sc_lv<3> > or_ln329_fu_173_p2;
    sc_signal< sc_lv<12> > y_V_fu_188_p4;
    sc_signal< sc_lv<12> > y_V_1_fu_203_p4;
    sc_signal< sc_lv<16> > exp_sum_V_fu_218_p0;
    sc_signal< sc_lv<16> > exp_sum_V_fu_218_p1;
    sc_signal< sc_lv<16> > exp_sum_V_fu_218_p2;
    sc_signal< sc_lv<12> > y_V_2_fu_224_p4;
    sc_signal< sc_lv<3> > tmp_fu_239_p4;
    sc_signal< sc_lv<3> > or_ln203_fu_252_p2;
    sc_signal< sc_lv<16> > mul_ln1118_fu_277_p1;
    sc_signal< sc_lv<32> > sext_ln1118_fu_267_p1;
    sc_signal< sc_lv<16> > mul_ln1118_1_fu_284_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to2;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<61> ap_const_lv61_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_F;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to2();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_data_V_address0();
    void thread_data_V_address1();
    void thread_data_V_ce0();
    void thread_data_V_ce1();
    void thread_exp_sum_V_fu_218_p0();
    void thread_exp_sum_V_fu_218_p1();
    void thread_exp_sum_V_fu_218_p2();
    void thread_exp_table12_address0();
    void thread_exp_table12_address1();
    void thread_exp_table12_ce0();
    void thread_exp_table12_ce1();
    void thread_invert_table13_address0();
    void thread_invert_table13_ce0();
    void thread_mul_ln1118_1_fu_284_p1();
    void thread_mul_ln1118_fu_277_p1();
    void thread_or_ln203_fu_252_p2();
    void thread_or_ln329_fu_173_p2();
    void thread_res_V_address0();
    void thread_res_V_address1();
    void thread_res_V_ce0();
    void thread_res_V_ce1();
    void thread_res_V_d0();
    void thread_res_V_d1();
    void thread_res_V_we0();
    void thread_res_V_we1();
    void thread_sext_ln1118_fu_267_p1();
    void thread_tmp_1_fu_258_p3();
    void thread_tmp_2_fu_158_p4();
    void thread_tmp_3_fu_179_p3();
    void thread_tmp_fu_239_p4();
    void thread_y_V_1_fu_203_p4();
    void thread_y_V_2_fu_224_p4();
    void thread_y_V_fu_188_p4();
    void thread_zext_ln203_fu_247_p1();
    void thread_zext_ln329_fu_168_p1();
    void thread_zext_ln330_1_fu_213_p1();
    void thread_zext_ln330_fu_198_p1();
    void thread_zext_ln342_fu_234_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
