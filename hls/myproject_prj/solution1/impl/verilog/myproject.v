// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.358000,HLS_SYN_LAT=2086,HLS_SYN_TPT=none,HLS_SYN_MEM=37,HLS_SYN_DSP=5040,HLS_SYN_FF=106724,HLS_SYN_LUT=175540,HLS_VERSION=2019_2}" *)

module myproject (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_in_V,
        data_in_V_ap_vld,
        data_out_0_V,
        data_out_0_V_ap_vld,
        data_out_1_V,
        data_out_1_V_ap_vld,
        data_out_2_V,
        data_out_2_V_ap_vld,
        data_out_3_V,
        data_out_3_V_ap_vld,
        data_out_4_V,
        data_out_4_V_ap_vld,
        const_size_in_1,
        const_size_in_1_ap_vld,
        const_size_out_1,
        const_size_out_1_ap_vld
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [559:0] data_in_V;
input   data_in_V_ap_vld;
output  [34:0] data_out_0_V;
output   data_out_0_V_ap_vld;
output  [34:0] data_out_1_V;
output   data_out_1_V_ap_vld;
output  [34:0] data_out_2_V;
output   data_out_2_V_ap_vld;
output  [34:0] data_out_3_V;
output   data_out_3_V_ap_vld;
output  [34:0] data_out_4_V;
output   data_out_4_V_ap_vld;
output  [15:0] const_size_in_1;
output   const_size_in_1_ap_vld;
output  [15:0] const_size_out_1;
output   const_size_out_1_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_out_0_V_ap_vld;
reg data_out_1_V_ap_vld;
reg data_out_2_V_ap_vld;
reg data_out_3_V_ap_vld;
reg data_out_4_V_ap_vld;
reg const_size_in_1_ap_vld;
reg const_size_out_1_ap_vld;

(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [559:0] data_in_V_preg;
reg   [559:0] data_in_V_in_sig;
reg    data_in_V_ap_vld_preg;
reg    data_in_V_ap_vld_in_sig;
reg    data_in_V_blk_n;
wire    ap_CS_fsm_state4;
reg   [34:0] embedded_with_cls_1_V_reg_1169;
wire    ap_CS_fsm_state5;
reg   [34:0] embedded_with_cls_3_V_reg_1174;
reg   [34:0] embedded_with_cls_5_V_reg_1179;
reg   [34:0] embedded_with_cls_7_V_reg_1184;
reg   [34:0] embedded_with_cls_9_V_reg_1189;
reg   [34:0] embedded_with_cls_11_V_reg_1194;
reg   [34:0] embedded_with_cls_13_V_reg_1199;
reg   [34:0] embedded_with_cls_15_V_reg_1204;
reg   [34:0] embedded_with_cls_17_V_reg_1209;
reg   [34:0] embedded_with_cls_19_V_reg_1214;
reg   [34:0] embedded_with_cls_21_V_reg_1219;
reg   [34:0] embedded_with_cls_23_V_reg_1224;
reg   [34:0] embedded_with_cls_25_V_reg_1229;
reg   [34:0] embedded_with_cls_27_V_reg_1234;
reg   [34:0] embedded_with_cls_29_V_reg_1239;
reg   [34:0] embedded_with_cls_31_V_reg_1244;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
reg   [11:0] y_V_reg_1409;
wire    ap_CS_fsm_state36;
reg   [11:0] y_V_8_reg_1414;
reg   [11:0] y_V_9_reg_1419;
reg   [11:0] y_V_10_reg_1424;
reg   [11:0] y_V_11_reg_1429;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
reg   [11:0] log_table_i_address0;
reg    log_table_i_ce0;
reg    log_table_i_we0;
wire   [15:0] log_table_i_q0;
reg   [11:0] log_table_i_address1;
reg    log_table_i_ce1;
reg    log_table_i_we1;
wire   [15:0] log_table_i_q1;
reg   [4:0] transformer_0_out_address0;
reg    transformer_0_out_ce0;
reg    transformer_0_out_we0;
wire   [34:0] transformer_0_out_q0;
reg   [4:0] transformer_0_out_address1;
reg    transformer_0_out_ce1;
reg    transformer_0_out_we1;
wire   [34:0] transformer_0_out_q1;
reg   [3:0] mlp_dimensions_reduced_V_address0;
reg    mlp_dimensions_reduced_V_ce0;
reg    mlp_dimensions_reduced_V_we0;
wire   [34:0] mlp_dimensions_reduced_V_q0;
reg   [3:0] mlp_dimensions_reduced_V_address1;
reg    mlp_dimensions_reduced_V_ce1;
reg    mlp_dimensions_reduced_V_we1;
wire   [34:0] mlp_dimensions_reduced_V_q1;
wire    grp_transformer_fu_821_ap_start;
wire    grp_transformer_fu_821_ap_done;
wire    grp_transformer_fu_821_ap_idle;
wire    grp_transformer_fu_821_ap_ready;
wire   [4:0] grp_transformer_fu_821_res_V_address0;
wire    grp_transformer_fu_821_res_V_ce0;
wire    grp_transformer_fu_821_res_V_we0;
wire   [34:0] grp_transformer_fu_821_res_V_d0;
wire   [4:0] grp_transformer_fu_821_res_V_address1;
wire    grp_transformer_fu_821_res_V_ce1;
wire    grp_transformer_fu_821_res_V_we1;
wire   [34:0] grp_transformer_fu_821_res_V_d1;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_0;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_1;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_2;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_3;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_4;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_5;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_6;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_7;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_8;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_9;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_10;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_11;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_12;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_13;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_14;
wire   [34:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_15;
wire    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_start;
wire    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_done;
wire    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_idle;
wire    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_ready;
wire   [11:0] grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_address0;
wire    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_ce0;
wire    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_we0;
wire   [15:0] grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_d0;
wire   [11:0] grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_address1;
wire    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_ce1;
wire    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_we1;
wire   [15:0] grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_d1;
wire    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_start;
wire    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_done;
wire    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_idle;
wire    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_ready;
wire   [3:0] grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_data_V_address0;
wire    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_data_V_ce0;
wire   [3:0] grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_data_V_address1;
wire    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_data_V_ce1;
wire   [34:0] grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_0;
wire   [34:0] grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_1;
wire   [34:0] grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_2;
wire   [34:0] grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_3;
wire   [34:0] grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_4;
wire    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_start;
wire    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_done;
wire    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_idle;
wire    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_ready;
wire   [15:0] grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_0_V_read;
wire   [15:0] grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_1_V_read;
wire   [15:0] grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_2_V_read;
wire   [15:0] grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_3_V_read;
wire   [15:0] grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_4_V_read;
wire   [15:0] grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_0;
wire   [15:0] grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_1;
wire   [15:0] grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_2;
wire   [15:0] grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_3;
wire   [15:0] grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_4;
reg    grp_transformer_fu_821_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_start_reg;
reg    grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_start_reg;
wire    ap_CS_fsm_state24;
reg   [39:0] ap_NS_fsm;
wire    ap_NS_fsm_state25;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
reg    grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_start_reg;
wire    ap_NS_fsm_state34;
wire    ap_CS_fsm_state34;
wire   [63:0] zext_ln364_fu_1084_p1;
wire   [63:0] zext_ln364_1_fu_1088_p1;
wire   [63:0] zext_ln364_2_fu_1118_p1;
wire   [63:0] zext_ln364_3_fu_1122_p1;
wire   [63:0] zext_ln364_4_fu_1152_p1;
wire    ap_CS_fsm_state40;
wire   [25:0] res_0_V_write_assign_fu_1092_p3;
wire   [25:0] res_1_V_write_assign_fu_1105_p3;
wire   [25:0] res_2_V_write_assign_fu_1126_p3;
wire   [25:0] res_3_V_write_assign_fu_1139_p3;
wire   [25:0] res_4_V_write_assign_fu_1156_p3;
reg    ap_block_state7_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 data_in_V_preg = 560'd0;
#0 data_in_V_ap_vld_preg = 1'b0;
#0 grp_transformer_fu_821_ap_start_reg = 1'b0;
#0 grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_start_reg = 1'b0;
#0 grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_start_reg = 1'b0;
#0 grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_start_reg = 1'b0;
end

myproject_log_table_i #(
    .DataWidth( 16 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
log_table_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(log_table_i_address0),
    .ce0(log_table_i_ce0),
    .we0(log_table_i_we0),
    .d0(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_d0),
    .q0(log_table_i_q0),
    .address1(log_table_i_address1),
    .ce1(log_table_i_ce1),
    .we1(log_table_i_we1),
    .d1(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_d1),
    .q1(log_table_i_q1)
);

myproject_transformer_0_out #(
    .DataWidth( 35 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
transformer_0_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(transformer_0_out_address0),
    .ce0(transformer_0_out_ce0),
    .we0(transformer_0_out_we0),
    .d0(grp_transformer_fu_821_res_V_d0),
    .q0(transformer_0_out_q0),
    .address1(transformer_0_out_address1),
    .ce1(transformer_0_out_ce1),
    .we1(transformer_0_out_we1),
    .d1(grp_transformer_fu_821_res_V_d1),
    .q1(transformer_0_out_q1)
);

myproject_mlp_dimensions_reduced_V #(
    .DataWidth( 35 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
mlp_dimensions_reduced_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_dimensions_reduced_V_address0),
    .ce0(mlp_dimensions_reduced_V_ce0),
    .we0(mlp_dimensions_reduced_V_we0),
    .d0(transformer_0_out_q0),
    .q0(mlp_dimensions_reduced_V_q0),
    .address1(mlp_dimensions_reduced_V_address1),
    .ce1(mlp_dimensions_reduced_V_ce1),
    .we1(mlp_dimensions_reduced_V_we1),
    .d1(transformer_0_out_q1),
    .q1(mlp_dimensions_reduced_V_q1)
);

transformer grp_transformer_fu_821(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_transformer_fu_821_ap_start),
    .ap_done(grp_transformer_fu_821_ap_done),
    .ap_idle(grp_transformer_fu_821_ap_idle),
    .ap_ready(grp_transformer_fu_821_ap_ready),
    .data_1_V_read(embedded_with_cls_1_V_reg_1169),
    .data_3_V_read(embedded_with_cls_3_V_reg_1174),
    .data_5_V_read(embedded_with_cls_5_V_reg_1179),
    .data_7_V_read(embedded_with_cls_7_V_reg_1184),
    .data_9_V_read(embedded_with_cls_9_V_reg_1189),
    .data_11_V_read(embedded_with_cls_11_V_reg_1194),
    .data_13_V_read(embedded_with_cls_13_V_reg_1199),
    .data_15_V_read(embedded_with_cls_15_V_reg_1204),
    .data_17_V_read(embedded_with_cls_17_V_reg_1209),
    .data_19_V_read(embedded_with_cls_19_V_reg_1214),
    .data_21_V_read(embedded_with_cls_21_V_reg_1219),
    .data_23_V_read(embedded_with_cls_23_V_reg_1224),
    .data_25_V_read(embedded_with_cls_25_V_reg_1229),
    .data_27_V_read(embedded_with_cls_27_V_reg_1234),
    .data_29_V_read(embedded_with_cls_29_V_reg_1239),
    .data_31_V_read(embedded_with_cls_31_V_reg_1244),
    .res_V_address0(grp_transformer_fu_821_res_V_address0),
    .res_V_ce0(grp_transformer_fu_821_res_V_ce0),
    .res_V_we0(grp_transformer_fu_821_res_V_we0),
    .res_V_d0(grp_transformer_fu_821_res_V_d0),
    .res_V_address1(grp_transformer_fu_821_res_V_address1),
    .res_V_ce1(grp_transformer_fu_821_res_V_ce1),
    .res_V_we1(grp_transformer_fu_821_res_V_we1),
    .res_V_d1(grp_transformer_fu_821_res_V_d1)
);

dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2 grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_V_read(data_in_V_in_sig),
    .ap_return_0(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_0),
    .ap_return_1(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_1),
    .ap_return_2(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_2),
    .ap_return_3(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_3),
    .ap_return_4(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_4),
    .ap_return_5(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_5),
    .ap_return_6(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_6),
    .ap_return_7(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_7),
    .ap_return_8(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_8),
    .ap_return_9(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_9),
    .ap_return_10(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_10),
    .ap_return_11(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_11),
    .ap_return_12(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_12),
    .ap_return_13(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_13),
    .ap_return_14(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_14),
    .ap_return_15(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_15)
);

init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_start),
    .ap_done(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_done),
    .ap_idle(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_idle),
    .ap_ready(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_ready),
    .table_out_V_address0(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_address0),
    .table_out_V_ce0(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_ce0),
    .table_out_V_we0(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_we0),
    .table_out_V_d0(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_d0),
    .table_out_V_address1(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_address1),
    .table_out_V_ce1(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_ce1),
    .table_out_V_we1(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_we1),
    .table_out_V_d1(grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_d1)
);

dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0 grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_start),
    .ap_done(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_done),
    .ap_idle(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_idle),
    .ap_ready(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_ready),
    .data_V_address0(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_data_V_address0),
    .data_V_ce0(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_data_V_ce0),
    .data_V_q0(mlp_dimensions_reduced_V_q0),
    .data_V_address1(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_data_V_address1),
    .data_V_ce1(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_data_V_ce1),
    .data_V_q1(mlp_dimensions_reduced_V_q1),
    .ap_return_0(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_1),
    .ap_return_2(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_2),
    .ap_return_3(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_3),
    .ap_return_4(grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_4)
);

softmax_latency_ap_fixed_ap_fixed_softmax_config0_s grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_start),
    .ap_done(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_done),
    .ap_idle(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_idle),
    .ap_ready(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_ready),
    .data_0_V_read(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_0_V_read),
    .data_1_V_read(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_1_V_read),
    .data_2_V_read(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_2_V_read),
    .data_3_V_read(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_3_V_read),
    .data_4_V_read(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_4_V_read),
    .ap_return_0(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_0),
    .ap_return_1(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_1),
    .ap_return_2(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_2),
    .ap_return_3(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_3),
    .ap_return_4(grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        data_in_V_ap_vld_preg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            data_in_V_ap_vld_preg <= 1'b0;
        end else if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (data_in_V_ap_vld == 1'b1))) begin
            data_in_V_ap_vld_preg <= data_in_V_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        data_in_V_preg <= 560'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (data_in_V_ap_vld == 1'b1))) begin
            data_in_V_preg <= data_in_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state25) & (1'b1 == ap_CS_fsm_state24))) begin
            grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_start_reg <= 1'b1;
        end else if ((grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_ready == 1'b1)) begin
            grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_start_reg <= 1'b1;
        end else if ((grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_ready == 1'b1)) begin
            grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state34) & (1'b1 == ap_CS_fsm_state33))) begin
            grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_start_reg <= 1'b1;
        end else if ((grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_ready == 1'b1)) begin
            grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_transformer_fu_821_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_transformer_fu_821_ap_start_reg <= 1'b1;
        end else if ((grp_transformer_fu_821_ap_ready == 1'b1)) begin
            grp_transformer_fu_821_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        embedded_with_cls_11_V_reg_1194 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_5;
        embedded_with_cls_13_V_reg_1199 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_6;
        embedded_with_cls_15_V_reg_1204 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_7;
        embedded_with_cls_17_V_reg_1209 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_8;
        embedded_with_cls_19_V_reg_1214 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_9;
        embedded_with_cls_1_V_reg_1169 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_0;
        embedded_with_cls_21_V_reg_1219 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_10;
        embedded_with_cls_23_V_reg_1224 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_11;
        embedded_with_cls_25_V_reg_1229 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_12;
        embedded_with_cls_27_V_reg_1234 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_13;
        embedded_with_cls_29_V_reg_1239 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_14;
        embedded_with_cls_31_V_reg_1244 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_15;
        embedded_with_cls_3_V_reg_1174 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_1;
        embedded_with_cls_5_V_reg_1179 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_2;
        embedded_with_cls_7_V_reg_1184 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_3;
        embedded_with_cls_9_V_reg_1189 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_2_fu_846_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        y_V_10_reg_1424 <= {{grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_3[15:4]}};
        y_V_11_reg_1429 <= {{grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_4[15:4]}};
        y_V_8_reg_1414 <= {{grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_1[15:4]}};
        y_V_9_reg_1419 <= {{grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_2[15:4]}};
        y_V_reg_1409 <= {{grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_return_0[15:4]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        const_size_in_1_ap_vld = 1'b1;
    end else begin
        const_size_in_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        const_size_out_1_ap_vld = 1'b1;
    end else begin
        const_size_out_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((data_in_V_ap_vld == 1'b1)) begin
        data_in_V_ap_vld_in_sig = data_in_V_ap_vld;
    end else begin
        data_in_V_ap_vld_in_sig = data_in_V_ap_vld_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        data_in_V_blk_n = data_in_V_ap_vld;
    end else begin
        data_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((data_in_V_ap_vld == 1'b1)) begin
        data_in_V_in_sig = data_in_V;
    end else begin
        data_in_V_in_sig = data_in_V_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        data_out_0_V_ap_vld = 1'b1;
    end else begin
        data_out_0_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        data_out_1_V_ap_vld = 1'b1;
    end else begin
        data_out_1_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        data_out_2_V_ap_vld = 1'b1;
    end else begin
        data_out_2_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        data_out_3_V_ap_vld = 1'b1;
    end else begin
        data_out_3_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        data_out_4_V_ap_vld = 1'b1;
    end else begin
        data_out_4_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        log_table_i_address0 = zext_ln364_4_fu_1152_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        log_table_i_address0 = zext_ln364_2_fu_1118_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        log_table_i_address0 = zext_ln364_fu_1084_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        log_table_i_address0 = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_address0;
    end else begin
        log_table_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        log_table_i_address1 = zext_ln364_3_fu_1122_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        log_table_i_address1 = zext_ln364_1_fu_1088_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        log_table_i_address1 = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_address1;
    end else begin
        log_table_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37))) begin
        log_table_i_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        log_table_i_ce0 = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_ce0;
    end else begin
        log_table_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37))) begin
        log_table_i_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        log_table_i_ce1 = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_ce1;
    end else begin
        log_table_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        log_table_i_we0 = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_we0;
    end else begin
        log_table_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        log_table_i_we1 = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_table_out_V_we1;
    end else begin
        log_table_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        mlp_dimensions_reduced_V_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        mlp_dimensions_reduced_V_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        mlp_dimensions_reduced_V_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        mlp_dimensions_reduced_V_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        mlp_dimensions_reduced_V_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        mlp_dimensions_reduced_V_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        mlp_dimensions_reduced_V_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        mlp_dimensions_reduced_V_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        mlp_dimensions_reduced_V_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        mlp_dimensions_reduced_V_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        mlp_dimensions_reduced_V_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        mlp_dimensions_reduced_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        mlp_dimensions_reduced_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        mlp_dimensions_reduced_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        mlp_dimensions_reduced_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        mlp_dimensions_reduced_V_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        mlp_dimensions_reduced_V_address0 = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_data_V_address0;
    end else begin
        mlp_dimensions_reduced_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        mlp_dimensions_reduced_V_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        mlp_dimensions_reduced_V_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        mlp_dimensions_reduced_V_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        mlp_dimensions_reduced_V_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        mlp_dimensions_reduced_V_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        mlp_dimensions_reduced_V_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        mlp_dimensions_reduced_V_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        mlp_dimensions_reduced_V_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        mlp_dimensions_reduced_V_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        mlp_dimensions_reduced_V_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        mlp_dimensions_reduced_V_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        mlp_dimensions_reduced_V_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        mlp_dimensions_reduced_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        mlp_dimensions_reduced_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        mlp_dimensions_reduced_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        mlp_dimensions_reduced_V_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        mlp_dimensions_reduced_V_address1 = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_data_V_address1;
    end else begin
        mlp_dimensions_reduced_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        mlp_dimensions_reduced_V_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        mlp_dimensions_reduced_V_ce0 = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_data_V_ce0;
    end else begin
        mlp_dimensions_reduced_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        mlp_dimensions_reduced_V_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        mlp_dimensions_reduced_V_ce1 = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_data_V_ce1;
    end else begin
        mlp_dimensions_reduced_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        mlp_dimensions_reduced_V_we0 = 1'b1;
    end else begin
        mlp_dimensions_reduced_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        mlp_dimensions_reduced_V_we1 = 1'b1;
    end else begin
        mlp_dimensions_reduced_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        transformer_0_out_address0 = 64'd60;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        transformer_0_out_address0 = 64'd56;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        transformer_0_out_address0 = 64'd52;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        transformer_0_out_address0 = 64'd48;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        transformer_0_out_address0 = 64'd44;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        transformer_0_out_address0 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        transformer_0_out_address0 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        transformer_0_out_address0 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        transformer_0_out_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        transformer_0_out_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        transformer_0_out_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        transformer_0_out_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        transformer_0_out_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        transformer_0_out_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        transformer_0_out_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        transformer_0_out_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        transformer_0_out_address0 = grp_transformer_fu_821_res_V_address0;
    end else begin
        transformer_0_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        transformer_0_out_address1 = 64'd62;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        transformer_0_out_address1 = 64'd58;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        transformer_0_out_address1 = 64'd54;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        transformer_0_out_address1 = 64'd50;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        transformer_0_out_address1 = 64'd46;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        transformer_0_out_address1 = 64'd42;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        transformer_0_out_address1 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        transformer_0_out_address1 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        transformer_0_out_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        transformer_0_out_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        transformer_0_out_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        transformer_0_out_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        transformer_0_out_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        transformer_0_out_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        transformer_0_out_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        transformer_0_out_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        transformer_0_out_address1 = grp_transformer_fu_821_res_V_address1;
    end else begin
        transformer_0_out_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        transformer_0_out_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        transformer_0_out_ce0 = grp_transformer_fu_821_res_V_ce0;
    end else begin
        transformer_0_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        transformer_0_out_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        transformer_0_out_ce1 = grp_transformer_fu_821_res_V_ce1;
    end else begin
        transformer_0_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        transformer_0_out_we0 = grp_transformer_fu_821_res_V_we0;
    end else begin
        transformer_0_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        transformer_0_out_we1 = grp_transformer_fu_821_res_V_we1;
    end else begin
        transformer_0_out_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((data_in_V_ap_vld_in_sig == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state25 = ap_NS_fsm[32'd24];

assign ap_NS_fsm_state34 = ap_NS_fsm[32'd33];

always @ (*) begin
    ap_block_state7_on_subcall_done = ((grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_done == 1'b0) | (grp_transformer_fu_821_ap_done == 1'b0));
end

assign const_size_in_1 = 16'd16;

assign const_size_out_1 = 16'd5;

assign data_out_0_V = $signed(res_0_V_write_assign_fu_1092_p3);

assign data_out_1_V = $signed(res_1_V_write_assign_fu_1105_p3);

assign data_out_2_V = $signed(res_2_V_write_assign_fu_1126_p3);

assign data_out_3_V = $signed(res_3_V_write_assign_fu_1139_p3);

assign data_out_4_V = $signed(res_4_V_write_assign_fu_1156_p3);

assign grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_start = grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_start_reg;

assign grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_start = grp_init_log_table_ap_fixed_16_6_5_3_0_softmax_config0_s_fu_852_ap_start_reg;

assign grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_start = grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_ap_start_reg;

assign grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_0_V_read = {{grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_0[25:10]}};

assign grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_1_V_read = {{grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_1[25:10]}};

assign grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_2_V_read = {{grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_2[25:10]}};

assign grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_3_V_read = {{grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_3[25:10]}};

assign grp_softmax_latency_ap_fixed_ap_fixed_softmax_config0_s_fu_862_data_4_V_read = {{grp_dense_latency_ap_fixed_ap_fixed_mlp_config_0_0_0_0_0_0_fu_857_ap_return_4[25:10]}};

assign grp_transformer_fu_821_ap_start = grp_transformer_fu_821_ap_start_reg;

assign res_0_V_write_assign_fu_1092_p3 = {{log_table_i_q0}, {10'd0}};

assign res_1_V_write_assign_fu_1105_p3 = {{log_table_i_q1}, {10'd0}};

assign res_2_V_write_assign_fu_1126_p3 = {{log_table_i_q0}, {10'd0}};

assign res_3_V_write_assign_fu_1139_p3 = {{log_table_i_q1}, {10'd0}};

assign res_4_V_write_assign_fu_1156_p3 = {{log_table_i_q0}, {10'd0}};

assign zext_ln364_1_fu_1088_p1 = y_V_8_reg_1414;

assign zext_ln364_2_fu_1118_p1 = y_V_9_reg_1419;

assign zext_ln364_3_fu_1122_p1 = y_V_10_reg_1424;

assign zext_ln364_4_fu_1152_p1 = y_V_11_reg_1429;

assign zext_ln364_fu_1084_p1 = y_V_reg_1409;

endmodule //myproject
