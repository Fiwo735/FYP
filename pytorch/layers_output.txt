-0.11950311809778214 0.40616291761398315 -1.0405861139297485 -0.8247312903404236 -0.7553362250328064 -0.5809733867645264 1.9869160652160645 1.5380626916885376 1.9869160652160645 0.631237804889679 0.38356146216392517 -0.2013053148984909 1.059766411781311 0.40865761041641235 -1.0199556350708008 -0.18016746640205383
input -> torch.Size([1, 1, 16])
tensor([[[-0.1195,  0.4062, -1.0406, -0.8247, -0.7553, -0.5810,  1.9869,
           1.5381,  1.9869,  0.6312,  0.3836, -0.2013,  1.0598,  0.4087,
          -1.0200, -0.1802]]], device='cuda:0')
out (after input layer) -> torch.Size([1, 1, 16])
tensor([[[ 1.2293, -1.3644, -1.2300, -0.2597, -1.3222, -0.3782,  0.7953,
           0.1078,  0.9409,  1.6465, -0.7220, -1.7378,  0.0289,  0.7287,
           0.3491,  0.4754]]], device='cuda:0')
cls_tokens -> torch.Size([1, 1, 16])
tensor([[[ 0.9970,  0.7997,  1.7774,  0.2276, -0.8879,  1.0277,  0.7074,
           0.4490, -0.6705, -2.0478,  0.8160, -0.6698,  0.8994, -0.5684,
          -1.8305,  1.4454]]], device='cuda:0')
out (after class tokens) -> torch.Size([1, 2, 16])
tensor([[[ 0.9970,  0.7997,  1.7774,  0.2276, -0.8879,  1.0277,  0.7074,
           0.4490, -0.6705, -2.0478,  0.8160, -0.6698,  0.8994, -0.5684,
          -1.8305,  1.4454],
         [ 1.2293, -1.3644, -1.2300, -0.2597, -1.3222, -0.3782,  0.7953,
           0.1078,  0.9409,  1.6465, -0.7220, -1.7378,  0.0289,  0.7287,
           0.3491,  0.4754]]], device='cuda:0')
T: input -> torch.Size([1, 2, 16])
tensor([[[ 0.9970,  0.7997,  1.7774,  0.2276, -0.8879,  1.0277,  0.7074,
           0.4490, -0.6705, -2.0478,  0.8160, -0.6698,  0.8994, -0.5684,
          -1.8305,  1.4454],
         [ 1.2293, -1.3644, -1.2300, -0.2597, -1.3222, -0.3782,  0.7953,
           0.1078,  0.9409,  1.6465, -0.7220, -1.7378,  0.0289,  0.7287,
           0.3491,  0.4754]]], device='cuda:0')
SA: input -> torch.Size([1, 2, 16])
tensor([[[ 0.9970,  0.7997,  1.7774,  0.2276, -0.8879,  1.0277,  0.7074,
           0.4490, -0.6705, -2.0478,  0.8160, -0.6698,  0.8994, -0.5684,
          -1.8305,  1.4454],
         [ 1.2293, -1.3644, -1.2300, -0.2597, -1.3222, -0.3782,  0.7953,
           0.1078,  0.9409,  1.6465, -0.7220, -1.7378,  0.0289,  0.7287,
           0.3491,  0.4754]]], device='cuda:0')
SA: out (after qkv) -> torch.Size([1, 2, 48])
tensor([[[ 2.4072,  3.1802,  0.1620, -1.6147, -0.0390,  1.8117,  0.1073,
           0.9391, -2.5250, -2.3724, -1.1861,  3.0197, -1.1571, -1.4754,
          -0.3980, -1.6936,  0.8671, -1.5590, -0.6093, -1.9581, -0.6957,
          -1.0680, -0.5200,  0.3751, -0.1830,  4.5713, -0.2672,  3.0615,
           0.1099, -0.0881,  2.9586,  2.3154,  0.3383, -0.6399,  0.0684,
          -0.3610, -0.3963,  0.1937, -1.2701, -0.4567, -0.3981, -0.0683,
          -0.0714, -1.8558,  3.2134, -2.8991,  2.9090, -0.5263],
         [-0.2614,  0.8147, -0.8592,  0.5779, -0.7731, -0.8903,  0.8162,
          -0.1025,  1.2305,  0.8629,  0.5638, -0.9955,  0.3479,  0.3763,
           0.6133,  0.4287,  1.9125, -0.5157, -0.2224,  0.4001, -2.1622,
          -0.4174, -0.8170, -0.2957,  0.7844, -0.9369, -0.5299, -0.0911,
           0.6204, -0.8977, -0.8988,  0.3505, -1.2792,  3.2929, -1.5261,
           2.4782,  1.4335, -0.5730,  2.7133,  2.6271, -0.9644, -0.3173,
           0.4818,  1.8480, -0.7389,  0.3447, -0.9575, -0.1380]]],
       device='cuda:0')
SA: queries -> torch.Size([1, 2, 2, 8])
tensor([[[[ 2.4072,  3.1802,  0.1620, -1.6147, -0.0390,  1.8117,  0.1073,
            0.9391],
          [-0.1830,  4.5713, -0.2672,  3.0615,  0.1099, -0.0881,  2.9586,
            2.3154]],

         [[-0.2614,  0.8147, -0.8592,  0.5779, -0.7731, -0.8903,  0.8162,
           -0.1025],
          [ 0.7844, -0.9369, -0.5299, -0.0911,  0.6204, -0.8977, -0.8988,
            0.3505]]]], device='cuda:0')
SA: keys -> torch.Size([1, 2, 2, 8])
tensor([[[[-2.5250, -2.3724, -1.1861,  3.0197, -1.1571, -1.4754, -0.3980,
           -1.6936],
          [ 0.3383, -0.6399,  0.0684, -0.3610, -0.3963,  0.1937, -1.2701,
           -0.4567]],

         [[ 1.2305,  0.8629,  0.5638, -0.9955,  0.3479,  0.3763,  0.6133,
            0.4287],
          [-1.2792,  3.2929, -1.5261,  2.4782,  1.4335, -0.5730,  2.7133,
            2.6271]]]], device='cuda:0')
SA: values -> torch.Size([1, 2, 2, 8])
tensor([[[[ 0.8671, -1.5590, -0.6093, -1.9581, -0.6957, -1.0680, -0.5200,
            0.3751],
          [-0.3981, -0.0683, -0.0714, -1.8558,  3.2134, -2.8991,  2.9090,
           -0.5263]],

         [[ 1.9125, -0.5157, -0.2224,  0.4001, -2.1622, -0.4174, -0.8170,
           -0.2957],
          [-0.9644, -0.3173,  0.4818,  1.8480, -0.7389,  0.3447, -0.9575,
           -0.1380]]]], device='cuda:0')
SA: energy -> torch.Size([1, 2, 2, 2])
tensor([[[[-22.9524,   8.5415],
          [  3.5483,  -0.8257]],

         [[ -8.9862,  37.6003],
          [  1.4233,  -3.6198]]]], device='cuda:0')
SA: attention -> torch.Size([1, 2, 2, 2])
tensor([[[[3.8056e-04, 9.9962e-01],
          [7.4904e-01, 2.5096e-01]],

         [[8.7484e-06, 9.9999e-01],
          [7.7916e-01, 2.2084e-01]]]], device='cuda:0')
SA: out (after einsum) -> torch.Size([1, 2, 2, 8])
tensor([[[[ 1.9121, -0.5161, -0.2225,  0.3992, -2.1616, -0.4177, -0.8168,
           -0.2955],
          [-0.9644, -0.3173,  0.4818,  1.8480, -0.7389,  0.3447, -0.9575,
           -0.1380]],

         [[ 1.1294, -1.2972, -0.5122, -1.3663, -1.0638, -0.9047, -0.5945,
            0.2068],
          [-0.5232, -0.1233,  0.0508, -1.0379,  2.3405, -2.1827,  2.0551,
           -0.4406]]]], device='cuda:0')
SA: out (after reshape) -> torch.Size([1, 2, 16])
tensor([[[ 1.9121, -0.5161, -0.2225,  0.3992, -2.1616, -0.4177, -0.8168,
          -0.2955, -0.9644, -0.3173,  0.4818,  1.8480, -0.7389,  0.3447,
          -0.9575, -0.1380],
         [ 1.1294, -1.2972, -0.5122, -1.3663, -1.0638, -0.9047, -0.5945,
           0.2068, -0.5232, -0.1233,  0.0508, -1.0379,  2.3405, -2.1827,
           2.0551, -0.4406]]], device='cuda:0')
SA: out (after out()) -> torch.Size([1, 2, 16])
tensor([[[ 0.4880, -0.8534, -1.2268, -2.4442,  0.7652, -0.7348, -0.1113,
          -1.6133,  0.9342, -0.4257,  0.7478,  2.4859,  1.3770,  2.4255,
          -0.8794, -0.8572],
         [-0.1624, -0.0857, -1.6077,  3.3643, -1.8774,  0.0450,  2.8530,
          -1.0765, -0.1881,  0.0087,  0.0244,  0.7892, -0.2486, -2.7097,
           0.2633,  2.4309]]], device='cuda:0')
SA: final_sum (before returning) -> torch.Size([1, 2, 16])
tensor([[[ 1.4850, -0.0537,  0.5506, -2.2166, -0.1226,  0.2929,  0.5962,
          -1.1642,  0.2637, -2.4735,  1.5639,  1.8161,  2.2764,  1.8572,
          -2.7099,  0.5881],
         [ 1.0669, -1.4501, -2.8377,  3.1046, -3.1995, -0.3332,  3.6483,
          -0.9688,  0.7528,  1.6552, -0.6976, -0.9486, -0.2198, -1.9810,
           0.6124,  2.9063]]], device='cuda:0')
T: x (after self-attention) -> torch.Size([1, 2, 16])
tensor([[[ 1.4850, -0.0537,  0.5506, -2.2166, -0.1226,  0.2929,  0.5962,
          -1.1642,  0.2637, -2.4735,  1.5639,  1.8161,  2.2764,  1.8572,
          -2.7099,  0.5881],
         [ 1.0669, -1.4501, -2.8377,  3.1046, -3.1995, -0.3332,  3.6483,
          -0.9688,  0.7528,  1.6552, -0.6976, -0.9486, -0.2198, -1.9810,
           0.6124,  2.9063]]], device='cuda:0')
T: out1 (after linear_1) -> torch.Size([1, 2, 16])
tensor([[[1.4850, 0.0000, 0.5506, 0.0000, 0.0000, 0.2929, 0.5962, 0.0000,
          0.2637, 0.0000, 1.5639, 1.8161, 2.2764, 1.8572, 0.0000, 0.5881],
         [1.0669, 0.0000, 0.0000, 3.1046, 0.0000, 0.0000, 3.6483, 0.0000,
          0.7528, 1.6552, 0.0000, 0.0000, 0.0000, 0.0000, 0.6124, 2.9063]]],
       device='cuda:0')
T: out2 (after linear_2) -> torch.Size([1, 2, 32])
tensor([[[-3.6255, -1.4179,  0.2605, -1.2355, -0.1037, -0.0821,  0.5247,
          -2.1865,  0.0570,  0.4448, -1.6576, -0.9800, -0.9950,  0.1880,
           1.5799,  0.5006, -3.2044,  0.2884, -0.3804, -1.2676,  0.1643,
          -0.5072, -0.1305, -2.3008,  0.5873,  0.9203, -0.4615, -0.6402,
          -0.3998,  0.5280, -0.0791,  0.4541],
         [ 0.4107, -2.2305, -0.1577,  0.8897, -2.2062, -0.2803, -1.3992,
          -0.9602, -1.1172,  2.1354,  2.4839, -0.3075,  0.0419, -1.2752,
          -0.1298,  2.1776, -1.9860, -0.0635,  1.7405, -3.4082,  0.7091,
          -3.3127,  2.1851, -0.0306, -3.5920,  1.5818,  2.6192, -1.8419,
          -3.6783, -2.9561, -2.2665, -1.8013]]], device='cuda:0')
T: out4 (after linear_4) -> torch.Size([1, 2, 32])
tensor([[[0.0000, 0.0000, 0.2605, 0.0000, 0.0000, 0.0000, 0.5247, 0.0000,
          0.0570, 0.4448, 0.0000, 0.0000, 0.0000, 0.1880, 1.5799, 0.5006,
          0.0000, 0.2884, 0.0000, 0.0000, 0.1643, 0.0000, 0.0000, 0.0000,
          0.5873, 0.9203, 0.0000, 0.0000, 0.0000, 0.5280, 0.0000, 0.4541],
         [0.4107, 0.0000, 0.0000, 0.8897, 0.0000, 0.0000, 0.0000, 0.0000,
          0.0000, 2.1354, 2.4839, 0.0000, 0.0419, 0.0000, 0.0000, 2.1776,
          0.0000, 0.0000, 1.7405, 0.0000, 0.7091, 0.0000, 2.1851, 0.0000,
          0.0000, 1.5818, 2.6192, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]],
       device='cuda:0')
T: out5 (after linear_5) -> torch.Size([1, 2, 16])
tensor([[[-0.2741, -0.4200, -0.3545,  1.0488, -0.3316, -0.2687,  0.1991,
          -0.0475,  0.1505,  0.6443,  0.4062, -0.5920,  0.7822, -0.3072,
           0.6652,  0.1090],
         [-1.8083, -3.1868,  0.9373, -3.7565, -0.5731, -0.7857,  1.3471,
          -2.6064,  2.7886, -0.7803, -1.4904,  2.0493, -1.0024,  2.0766,
          -2.0887,  0.0229]]], device='cuda:0')
T: out (after x + out) -> torch.Size([1, 2, 16])
tensor([[[ 1.2109, -0.4737,  0.1961, -1.1678, -0.4542,  0.0241,  0.7952,
          -1.2117,  0.4142, -1.8292,  1.9701,  1.2241,  3.0585,  1.5500,
          -2.0447,  0.6972],
         [-0.7413, -4.6368, -1.9004, -0.6519, -3.7726, -1.1190,  4.9954,
          -3.5751,  3.5414,  0.8749, -2.1880,  1.1007, -1.2222,  0.0956,
          -1.4764,  2.9292]]], device='cuda:0')
T: out (after dropout) -> torch.Size([1, 2, 16])
tensor([[[ 1.2109, -0.4737,  0.1961, -1.1678, -0.4542,  0.0241,  0.7952,
          -1.2117,  0.4142, -1.8292,  1.9701,  1.2241,  3.0585,  1.5500,
          -2.0447,  0.6972],
         [-0.7413, -4.6368, -1.9004, -0.6519, -3.7726, -1.1190,  4.9954,
          -3.5751,  3.5414,  0.8749, -2.1880,  1.1007, -1.2222,  0.0956,
          -1.4764,  2.9292]]], device='cuda:0')
out (after transformer layer) -> torch.Size([1, 2, 16])
tensor([[[ 1.2109, -0.4737,  0.1961, -1.1678, -0.4542,  0.0241,  0.7952,
          -1.2117,  0.4142, -1.8292,  1.9701,  1.2241,  3.0585,  1.5500,
          -2.0447,  0.6972],
         [-0.7413, -4.6368, -1.9004, -0.6519, -3.7726, -1.1190,  4.9954,
          -3.5751,  3.5414,  0.8749, -2.1880,  1.1007, -1.2222,  0.0956,
          -1.4764,  2.9292]]], device='cuda:0')
out (after out[:, 0]) -> torch.Size([1, 16])
tensor([[ 1.2109, -0.4737,  0.1961, -1.1678, -0.4542,  0.0241,  0.7952, -1.2117,
          0.4142, -1.8292,  1.9701,  1.2241,  3.0585,  1.5500, -2.0447,  0.6972]],
       device='cuda:0')
out (after out layer 1) -> torch.Size([1, 5])
tensor([[ 1.8985,  1.5804, -1.2018,  0.3687,  0.1621]], device='cuda:0')
out (after squeeze()) -> torch.Size([1, 5])
tensor([[ 1.8985,  1.5804, -1.2018,  0.3687,  0.1621]], device='cuda:0')
final_result (softmax) -> torch.Size([1, 5])
tensor([[-0.7726, -1.0907, -3.8729, -2.3024, -2.5089]], device='cuda:0')
