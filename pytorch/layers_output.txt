-0.11950311809778214 0.40616291761398315 -1.0405861139297485 -0.8247312903404236 -0.7553362250328064 -0.5809733867645264 1.9869160652160645 1.5380626916885376 1.9869160652160645 0.631237804889679 0.38356146216392517 -0.2013053148984909 1.059766411781311 0.40865761041641235 -1.0199556350708008 -0.18016746640205383
input -> torch.Size([1, 1, 16])
tensor([[[-0.11950,  0.40616, -1.04059, -0.82473, -0.75534, -0.58097,  1.98692,  1.53806,  1.98692,  0.63124,  0.38356, -0.20131,  1.05977,  0.40866, -1.01996, -0.18017]]], device='cuda:0')
out (after input layer) -> torch.Size([1, 1, 16])
tensor([[[ 1.22931, -1.36438, -1.23002, -0.25970, -1.32216, -0.37823,  0.79529,  0.10777,  0.94089,  1.64654, -0.72196, -1.73778,  0.02887,  0.72872,  0.34908,  0.47537]]], device='cuda:0')
cls_tokens -> torch.Size([1, 1, 16])
tensor([[[ 0.99703,  0.79974,  1.77738,  0.22761, -0.88787,  1.02766,  0.70742,  0.44902, -0.67054, -2.04778,  0.81605, -0.66984,  0.89942, -0.56835, -1.83049,  1.44535]]], device='cuda:0')
out (after class tokens) -> torch.Size([1, 2, 16])
tensor([[[ 0.99703,  0.79974,  1.77738,  0.22761, -0.88787,  1.02766,  0.70742,  0.44902, -0.67054, -2.04778,  0.81605, -0.66984,  0.89942, -0.56835, -1.83049,  1.44535],
         [ 1.22931, -1.36438, -1.23002, -0.25970, -1.32216, -0.37823,  0.79529,  0.10777,  0.94089,  1.64654, -0.72196, -1.73778,  0.02887,  0.72872,  0.34908,  0.47537]]], device='cuda:0')
T: input -> torch.Size([1, 2, 16])
tensor([[[ 0.99703,  0.79974,  1.77738,  0.22761, -0.88787,  1.02766,  0.70742,  0.44902, -0.67054, -2.04778,  0.81605, -0.66984,  0.89942, -0.56835, -1.83049,  1.44535],
         [ 1.22931, -1.36438, -1.23002, -0.25970, -1.32216, -0.37823,  0.79529,  0.10777,  0.94089,  1.64654, -0.72196, -1.73778,  0.02887,  0.72872,  0.34908,  0.47537]]], device='cuda:0')
SA: input -> torch.Size([1, 2, 16])
tensor([[[ 0.99703,  0.79974,  1.77738,  0.22761, -0.88787,  1.02766,  0.70742,  0.44902, -0.67054, -2.04778,  0.81605, -0.66984,  0.89942, -0.56835, -1.83049,  1.44535],
         [ 1.22931, -1.36438, -1.23002, -0.25970, -1.32216, -0.37823,  0.79529,  0.10777,  0.94089,  1.64654, -0.72196, -1.73778,  0.02887,  0.72872,  0.34908,  0.47537]]], device='cuda:0')
SA: out (after qkv) -> torch.Size([1, 2, 48])
tensor([[[ 2.40720,  3.18020,  0.16198, -1.61474, -0.03905,  1.81171,  0.10727,  0.93912, -2.52504, -2.37244, -1.18614,  3.01974, -1.15712, -1.47538, -0.39801, -1.69363,  0.86706, -1.55903, -0.60927, -1.95810, -0.69573, -1.06801, -0.52001,  0.37513, -0.18303,  4.57130, -0.26716,  3.06153,  0.10992, -0.08811,  2.95860,  2.31542,  0.33832, -0.63987,  0.06837, -0.36095, -0.39631,  0.19368, -1.27013, -0.45671, -0.39809, -0.06835, -0.07136, -1.85583,  3.21336, -2.89912,  2.90903, -0.52635],
         [-0.26140,  0.81468, -0.85923,  0.57786, -0.77311, -0.89032,  0.81623, -0.10250,  1.23047,  0.86286,  0.56383, -0.99552,  0.34785,  0.37633,  0.61333,  0.42870,  1.91252, -0.51571, -0.22240,  0.40008, -2.16220, -0.41745, -0.81696, -0.29572,  0.78443, -0.93687, -0.52988, -0.09113,  0.62039, -0.89769, -0.89878,  0.35052, -1.27917,  3.29292, -1.52611,  2.47820,  1.43348, -0.57299,  2.71330,  2.62710, -0.96441, -0.31726,  0.48177,  1.84803, -0.73891,  0.34474, -0.95749, -0.13796]]], device='cuda:0')
SA: queries -> torch.Size([1, 2, 2, 8])
tensor([[[[ 2.40720,  3.18020,  0.16198, -1.61474, -0.03905,  1.81171,  0.10727,  0.93912],
          [-0.18303,  4.57130, -0.26716,  3.06153,  0.10992, -0.08811,  2.95860,  2.31542]],

         [[-0.26140,  0.81468, -0.85923,  0.57786, -0.77311, -0.89032,  0.81623, -0.10250],
          [ 0.78443, -0.93687, -0.52988, -0.09113,  0.62039, -0.89769, -0.89878,  0.35052]]]], device='cuda:0')
SA: keys -> torch.Size([1, 2, 2, 8])
tensor([[[[-2.52504, -2.37244, -1.18614,  3.01974, -1.15712, -1.47538, -0.39801, -1.69363],
          [ 0.33832, -0.63987,  0.06837, -0.36095, -0.39631,  0.19368, -1.27013, -0.45671]],

         [[ 1.23047,  0.86286,  0.56383, -0.99552,  0.34785,  0.37633,  0.61333,  0.42870],
          [-1.27917,  3.29292, -1.52611,  2.47820,  1.43348, -0.57299,  2.71330,  2.62710]]]], device='cuda:0')
SA: values -> torch.Size([1, 2, 2, 8])
tensor([[[[ 0.86706, -1.55903, -0.60927, -1.95810, -0.69573, -1.06801, -0.52001,  0.37513],
          [-0.39809, -0.06835, -0.07136, -1.85583,  3.21336, -2.89912,  2.90903, -0.52635]],

         [[ 1.91252, -0.51571, -0.22240,  0.40008, -2.16220, -0.41745, -0.81696, -0.29572],
          [-0.96441, -0.31726,  0.48177,  1.84803, -0.73891,  0.34474, -0.95749, -0.13796]]]], device='cuda:0')
SA: energy -> torch.Size([1, 2, 2, 2])
tensor([[[[-22.95239,   8.54153],
          [  3.54828,  -0.82572]],

         [[ -8.98619,  37.60034],
          [  1.42328,  -3.61977]]]], device='cuda:0')
SA: attention -> torch.Size([1, 2, 2, 2])
tensor([[[[    0.00038,     0.99962],
          [    0.74904,     0.25096]],

         [[    0.00001,     0.99999],
          [    0.77916,     0.22084]]]], device='cuda:0')
SA: out (after einsum) -> torch.Size([1, 2, 2, 8])
tensor([[[[ 1.91212, -0.51611, -0.22255,  0.39918, -2.16164, -0.41769, -0.81685, -0.29546],
          [-0.96440, -0.31726,  0.48177,  1.84800, -0.73888,  0.34471, -0.95746, -0.13797]],

         [[ 1.12943, -1.29720, -0.51218, -1.36629, -1.06375, -0.90475, -0.59453,  0.20677],
          [-0.52316, -0.12332,  0.05079, -1.03786,  2.34053, -2.18273,  2.05514, -0.44058]]]], device='cuda:0')
SA: out (after reshape) -> torch.Size([1, 2, 16])
tensor([[[ 1.91212, -0.51611, -0.22255,  0.39918, -2.16164, -0.41769, -0.81685, -0.29546, -0.96440, -0.31726,  0.48177,  1.84800, -0.73888,  0.34471, -0.95746, -0.13797],
         [ 1.12943, -1.29720, -0.51218, -1.36629, -1.06375, -0.90475, -0.59453,  0.20677, -0.52316, -0.12332,  0.05079, -1.03786,  2.34053, -2.18273,  2.05514, -0.44058]]], device='cuda:0')
SA: out (after out()) -> torch.Size([1, 2, 16])
tensor([[[ 0.48798, -0.85343, -1.22682, -2.44419,  0.76525, -0.73481, -0.11127, -1.61326,  0.93424, -0.42571,  0.74782,  2.48595,  1.37695,  2.42554, -0.87940, -0.85722],
         [-0.16237, -0.08571, -1.60767,  3.36432, -1.87736,  0.04498,  2.85302, -1.07653, -0.18810,  0.00868,  0.02440,  0.78915, -0.24865, -2.70967,  0.26329,  2.43094]]], device='cuda:0')
SA: final_sum (before returning) -> torch.Size([1, 2, 16])
tensor([[[ 1.48501, -0.05369,  0.55056, -2.21658, -0.12262,  0.29285,  0.59615, -1.16424,  0.26370, -2.47349,  1.56387,  1.81611,  2.27637,  1.85719, -2.70988,  0.58813],
         [ 1.06693, -1.45009, -2.83768,  3.10462, -3.19952, -0.33325,  3.64831, -0.96876,  0.75279,  1.65523, -0.69756, -0.94863, -0.21978, -1.98096,  0.61237,  2.90630]]], device='cuda:0')
T: x (after self-attention) -> torch.Size([1, 2, 16])
tensor([[[ 1.48501, -0.05369,  0.55056, -2.21658, -0.12262,  0.29285,  0.59615, -1.16424,  0.26370, -2.47349,  1.56387,  1.81611,  2.27637,  1.85719, -2.70988,  0.58813],
         [ 1.06693, -1.45009, -2.83768,  3.10462, -3.19952, -0.33325,  3.64831, -0.96876,  0.75279,  1.65523, -0.69756, -0.94863, -0.21978, -1.98096,  0.61237,  2.90630]]], device='cuda:0')
T: out1 (after linear_1) -> torch.Size([1, 2, 16])
tensor([[[1.48501, 0.00000, 0.55056, 0.00000, 0.00000, 0.29285, 0.59615, 0.00000, 0.26370, 0.00000, 1.56387, 1.81611, 2.27637, 1.85719, 0.00000, 0.58813],
         [1.06693, 0.00000, 0.00000, 3.10462, 0.00000, 0.00000, 3.64831, 0.00000, 0.75279, 1.65523, 0.00000, 0.00000, 0.00000, 0.00000, 0.61237, 2.90630]]], device='cuda:0')
T: out2 (after linear_2) -> torch.Size([1, 2, 32])
tensor([[[-3.62548, -1.41794,  0.26050, -1.23549, -0.10372, -0.08209,  0.52475, -2.18646,  0.05699,  0.44483, -1.65758, -0.98003, -0.99504,  0.18803,  1.57995,  0.50056, -3.20443,  0.28841, -0.38037, -1.26756,  0.16427, -0.50717, -0.13050, -2.30077,  0.58730,  0.92034, -0.46149, -0.64020, -0.39983,  0.52802, -0.07907,  0.45413],
         [ 0.41071, -2.23053, -0.15771,  0.88972, -2.20617, -0.28030, -1.39924, -0.96024, -1.11722,  2.13537,  2.48387, -0.30753,  0.04194, -1.27523, -0.12982,  2.17757, -1.98599, -0.06353,  1.74046, -3.40823,  0.70911, -3.31271,  2.18510, -0.03056, -3.59202,  1.58185,  2.61924, -1.84190, -3.67825, -2.95611, -2.26654, -1.80131]]], device='cuda:0')
T: out4 (after linear_4) -> torch.Size([1, 2, 32])
tensor([[[0.00000, 0.00000, 0.26050, 0.00000, 0.00000, 0.00000, 0.52475, 0.00000, 0.05699, 0.44483, 0.00000, 0.00000, 0.00000, 0.18803, 1.57995, 0.50056, 0.00000, 0.28841, 0.00000, 0.00000, 0.16427, 0.00000, 0.00000, 0.00000, 0.58730, 0.92034, 0.00000, 0.00000, 0.00000, 0.52802, 0.00000, 0.45413],
         [0.41071, 0.00000, 0.00000, 0.88972, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 2.13537, 2.48387, 0.00000, 0.04194, 0.00000, 0.00000, 2.17757, 0.00000, 0.00000, 1.74046, 0.00000, 0.70911, 0.00000, 2.18510, 0.00000, 0.00000, 1.58185, 2.61924, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000]]], device='cuda:0')
T: out5 (after linear_5) -> torch.Size([1, 2, 16])
tensor([[[-0.27413, -0.42002, -0.35447,  1.04877, -0.33159, -0.26872,  0.19907, -0.04750,  0.15050,  0.64433,  0.40618, -0.59201,  0.78217, -0.30721,  0.66516,  0.10905],
         [-1.80828, -3.18675,  0.93727, -3.75649, -0.57306, -0.78573,  1.34712, -2.60636,  2.78857, -0.78034, -1.49039,  2.04930, -1.00244,  2.07655, -2.08875,  0.02290]]], device='cuda:0')
T: out (after x + out) -> torch.Size([1, 2, 16])
tensor([[[ 1.21088, -0.47372,  0.19610, -1.16781, -0.45421,  0.02414,  0.79522, -1.21174,  0.41420, -1.82916,  1.97005,  1.22411,  3.05854,  1.54998, -2.04472,  0.69717],
         [-0.74134, -4.63684, -1.90042, -0.65187, -3.77257, -1.11897,  4.99543, -3.57512,  3.54136,  0.87489, -2.18795,  1.10067, -1.22222,  0.09560, -1.47638,  2.92920]]], device='cuda:0')
T: out (after dropout) -> torch.Size([1, 2, 16])
tensor([[[ 1.21088, -0.47372,  0.19610, -1.16781, -0.45421,  0.02414,  0.79522, -1.21174,  0.41420, -1.82916,  1.97005,  1.22411,  3.05854,  1.54998, -2.04472,  0.69717],
         [-0.74134, -4.63684, -1.90042, -0.65187, -3.77257, -1.11897,  4.99543, -3.57512,  3.54136,  0.87489, -2.18795,  1.10067, -1.22222,  0.09560, -1.47638,  2.92920]]], device='cuda:0')
out (after transformer layer) -> torch.Size([1, 2, 16])
tensor([[[ 1.21088, -0.47372,  0.19610, -1.16781, -0.45421,  0.02414,  0.79522, -1.21174,  0.41420, -1.82916,  1.97005,  1.22411,  3.05854,  1.54998, -2.04472,  0.69717],
         [-0.74134, -4.63684, -1.90042, -0.65187, -3.77257, -1.11897,  4.99543, -3.57512,  3.54136,  0.87489, -2.18795,  1.10067, -1.22222,  0.09560, -1.47638,  2.92920]]], device='cuda:0')
out (after out[:, 0]) -> torch.Size([1, 16])
tensor([[ 1.21088, -0.47372,  0.19610, -1.16781, -0.45421,  0.02414,  0.79522, -1.21174,  0.41420, -1.82916,  1.97005,  1.22411,  3.05854,  1.54998, -2.04472,  0.69717]], device='cuda:0')
out (after out layer 1) -> torch.Size([1, 5])
tensor([[ 1.89849,  1.58040, -1.20182,  0.36869,  0.16215]], device='cuda:0')
out (after squeeze()) -> torch.Size([1, 5])
tensor([[ 1.89849,  1.58040, -1.20182,  0.36869,  0.16215]], device='cuda:0')
final_result (softmax) -> torch.Size([1, 5])
tensor([[-0.77257, -1.09066, -3.87288, -2.30237, -2.50891]], device='cuda:0')
Predictions:
-0.7725652456283569 -1.0906555652618408 -3.8728761672973633 -2.3023693561553955 -2.5089097023010254
