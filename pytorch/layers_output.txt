-0.11950311809778214 0.40616291761398315 -1.0405861139297485 -0.8247312903404236 -0.7553362250328064 -0.5809733867645264 1.9869160652160645 1.5380626916885376 1.9869160652160645 0.631237804889679 0.38356146216392517 -0.2013053148984909 1.059766411781311 0.40865761041641235 -1.0199556350708008 -0.18016746640205383

input -> torch.Size([1, 1, 16])
tensor([[[-0.11950,  0.40616, -1.04059, -0.82473, -0.75534, -0.58097,  1.98692,  1.53806,  1.98692,  0.63124,  0.38356, -0.20131,  1.05977,  0.40866, -1.01996, -0.18017]]], device='cuda:0')

out (after input layer) -> torch.Size([1, 1, 16])
tensor([[[-0.14094, -0.16424, -0.34874, -0.89007,  1.69146, -0.84346, -0.54575,  1.44176, -1.16333,  0.88859,  0.68231,  0.49683,  0.05376,  0.15535, -1.14701,  0.93157]]], device='cuda:0')

cls_tokens -> torch.Size([1, 1, 16])
tensor([[[ 0.96268, -1.85722, -0.69828, -0.42309, -0.52575, -1.45245,  0.04882, -0.69681,  1.11899, -0.27224,  2.29035,  0.98578, -0.06154,  0.97596,  0.49290,  0.23407]]], device='cuda:0')

out (after class tokens) -> torch.Size([1, 2, 16])
tensor([[[ 0.96268, -1.85722, -0.69828, -0.42309, -0.52575, -1.45245,  0.04882, -0.69681,  1.11899, -0.27224,  2.29035,  0.98578, -0.06154,  0.97596,  0.49290,  0.23407],
         [-0.14094, -0.16424, -0.34874, -0.89007,  1.69146, -0.84346, -0.54575,  1.44176, -1.16333,  0.88859,  0.68231,  0.49683,  0.05376,  0.15535, -1.14701,  0.93157]]], device='cuda:0')

T: input -> torch.Size([1, 2, 16])
tensor([[[ 0.96268, -1.85722, -0.69828, -0.42309, -0.52575, -1.45245,  0.04882, -0.69681,  1.11899, -0.27224,  2.29035,  0.98578, -0.06154,  0.97596,  0.49290,  0.23407],
         [-0.14094, -0.16424, -0.34874, -0.89007,  1.69146, -0.84346, -0.54575,  1.44176, -1.16333,  0.88859,  0.68231,  0.49683,  0.05376,  0.15535, -1.14701,  0.93157]]], device='cuda:0')

SA: input -> torch.Size([1, 2, 16])
tensor([[[ 0.96268, -1.85722, -0.69828, -0.42309, -0.52575, -1.45245,  0.04882, -0.69681,  1.11899, -0.27224,  2.29035,  0.98578, -0.06154,  0.97596,  0.49290,  0.23407],
         [-0.14094, -0.16424, -0.34874, -0.89007,  1.69146, -0.84346, -0.54575,  1.44176, -1.16333,  0.88859,  0.68231,  0.49683,  0.05376,  0.15535, -1.14701,  0.93157]]], device='cuda:0')

SA: out (after qkv) -> torch.Size([1, 2, 48])
tensor([[[    -0.57357,     -2.66869,      0.23788,      0.13845,      1.81420,      0.36361,     -1.48174,     -0.82471,      0.87438,      1.07257,     -0.63767,      0.02834,     -1.61146,     -0.23805,      0.38569,      0.74484,     -1.35027,      0.31621,     -0.17412,     -0.01834,     -0.24279,      0.03029,     -1.21066,      0.34809,     -0.01266,     -0.01046,     -0.08076,     -1.82825,     -3.19789,     -0.03696,     -0.02962,      2.07316,     -0.30906,     -0.76740,     -0.24259,      2.78941,      2.46018,     -1.22861,      0.08780,     -2.13324,      0.02992,      0.45552,     -1.21422,      1.82565,      1.64105,      0.31215,      1.31548,      0.73296],
         [    -0.36497,     -0.16509,      0.57179,      0.01277,      0.49912,     -0.67194,     -0.37975,     -0.29706,     -1.12905,     -0.51312,      0.01861,      0.17239,      1.79798,      0.16316,     -1.20765,     -0.56939,     -1.11004,      1.64969,      1.15725,      0.18141,      1.27176,      1.70941,      2.58725,     -0.50437,      0.50890,     -0.08997,      0.46794,      0.83482,      0.30670,     -1.48110,     -1.01597,     -0.41075,     -0.18334,     -0.10076,     -0.02312,     -0.52194,     -0.66121,      0.00136,     -0.20540,      0.48130,     -1.09017,      1.61242,     -1.07285,      0.31071,      0.26985,     -1.77748,      0.92545,      0.42229]]], device='cuda:0')

SA: out (after view) -> torch.Size([1, 2, 2, 24])
tensor([[[[    -0.57357,     -2.66869,      0.23788,      0.13845,      1.81420,      0.36361,     -1.48174,     -0.82471,      0.87438,      1.07257,     -0.63767,      0.02834,     -1.61146,     -0.23805,      0.38569,      0.74484,     -1.35027,      0.31621,     -0.17412,     -0.01834,     -0.24279,      0.03029,     -1.21066,      0.34809],
          [    -0.01266,     -0.01046,     -0.08076,     -1.82825,     -3.19789,     -0.03696,     -0.02962,      2.07316,     -0.30906,     -0.76740,     -0.24259,      2.78941,      2.46018,     -1.22861,      0.08780,     -2.13324,      0.02992,      0.45552,     -1.21422,      1.82565,      1.64105,      0.31215,      1.31548,      0.73296]],

         [[    -0.36497,     -0.16509,      0.57179,      0.01277,      0.49912,     -0.67194,     -0.37975,     -0.29706,     -1.12905,     -0.51312,      0.01861,      0.17239,      1.79798,      0.16316,     -1.20765,     -0.56939,     -1.11004,      1.64969,      1.15725,      0.18141,      1.27176,      1.70941,      2.58725,     -0.50437],
          [     0.50890,     -0.08997,      0.46794,      0.83482,      0.30670,     -1.48110,     -1.01597,     -0.41075,     -0.18334,     -0.10076,     -0.02312,     -0.52194,     -0.66121,      0.00136,     -0.20540,      0.48130,     -1.09017,      1.61242,     -1.07285,      0.31071,      0.26985,     -1.77748,      0.92545,      0.42229]]]], device='cuda:0')

SA: queries -> torch.Size([1, 2, 2, 8])
tensor([[[[-0.57357, -2.66869,  0.23788,  0.13845,  1.81420,  0.36361, -1.48174, -0.82471],
          [-0.01266, -0.01046, -0.08076, -1.82825, -3.19789, -0.03696, -0.02962,  2.07316]],

         [[-0.36497, -0.16509,  0.57179,  0.01277,  0.49912, -0.67194, -0.37975, -0.29706],
          [ 0.50890, -0.08997,  0.46794,  0.83482,  0.30670, -1.48110, -1.01597, -0.41075]]]], device='cuda:0')

SA: keys -> torch.Size([1, 2, 2, 8])
tensor([[[[     0.87438,      1.07257,     -0.63767,      0.02834,     -1.61146,     -0.23805,      0.38569,      0.74484],
          [    -0.30906,     -0.76740,     -0.24259,      2.78941,      2.46018,     -1.22861,      0.08780,     -2.13324]],

         [[    -1.12905,     -0.51312,      0.01861,      0.17239,      1.79798,      0.16316,     -1.20765,     -0.56939],
          [    -0.18334,     -0.10076,     -0.02312,     -0.52194,     -0.66121,      0.00136,     -0.20540,      0.48130]]]], device='cuda:0')

SA: values -> torch.Size([1, 2, 2, 8])
tensor([[[[-1.35027,  0.31621, -0.17412, -0.01834, -0.24279,  0.03029, -1.21066,  0.34809],
          [ 0.02992,  0.45552, -1.21422,  1.82565,  1.64105,  0.31215,  1.31548,  0.73296]],

         [[-1.11004,  1.64969,  1.15725,  0.18141,  1.27176,  1.70941,  2.58725, -0.50437],
          [-1.09017,  1.61242, -1.07285,  0.31071,  0.26985, -1.77748,  0.92545,  0.42229]]]], device='cuda:0')

SA: energy -> torch.Size([1, 2, 2, 2])
tensor([[[[ -7.70747,   7.62546],
          [ -1.87252,   1.92514]],

         [[-17.31534,   4.07781],
          [  5.48816,  -0.72460]]]], device='cuda:0')

SA: attention -> torch.Size([1, 2, 2, 2])
tensor([[[[0.02118, 0.97882],
          [0.27900, 0.72100]],

         [[0.00473, 0.99527],
          [0.82537, 0.17463]]]], device='cuda:0')

SA: out (after einsum) -> torch.Size([1, 2, 2, 8])
tensor([[[[-1.11513,  1.62145,  1.12905,  0.17718,  1.23968,  1.67384,  2.50680, -0.48632],
          [-1.08487,  1.60694, -1.07352,  0.31788,  0.27634, -1.76759,  0.92730,  0.42376]],

         [[-1.17707,  1.27765,  0.78579,  0.12568,  0.84920,  1.24093,  1.52762, -0.26653],
          [-0.16568,  0.65755, -1.18953,  1.56110,  1.40160, -0.05275,  1.24737,  0.67871]]]], device='cuda:0')

SA: out (after reshape) -> torch.Size([1, 2, 16])
tensor([[[-1.11513,  1.62145,  1.12905,  0.17718,  1.23968,  1.67384,  2.50680, -0.48632, -1.08487,  1.60694, -1.07352,  0.31788,  0.27634, -1.76759,  0.92730,  0.42376],
         [-1.17707,  1.27765,  0.78579,  0.12568,  0.84920,  1.24093,  1.52762, -0.26653, -0.16568,  0.65755, -1.18953,  1.56110,  1.40160, -0.05275,  1.24737,  0.67871]]], device='cuda:0')

SA: out (after out()) -> torch.Size([1, 2, 16])
tensor([[[-1.73629,  3.11130,  2.17883, -3.35706,  0.83428, -0.56868,  4.54314, -1.59462,  0.05298,  3.92982, -2.13179,  0.29851, -0.14831, -0.46707, -4.85919,  0.30013],
         [-1.48406,  2.57861,  1.15937, -1.92022, -0.39844, -0.20930,  2.82830, -1.68124, -0.94426,  2.86340, -2.33552,  0.17137,  0.19474, -0.60089, -2.55478,  0.40965]]], device='cuda:0')

SA: final_sum (before returning) -> torch.Size([1, 2, 16])
tensor([[[-0.77362,  1.25407,  1.48055, -3.78015,  0.30853, -2.02113,  4.59196, -2.29144,  1.17197,  3.65759,  0.15856,  1.28429, -0.20985,  0.50889, -4.36629,  0.53420],
         [-1.62500,  2.41437,  0.81063, -2.81029,  1.29302, -1.05275,  2.28254, -0.23948, -2.10759,  3.75199, -1.65321,  0.66820,  0.24850, -0.44554, -3.70179,  1.34123]]], device='cuda:0')

T: x (after self-attention) -> torch.Size([1, 2, 16])
tensor([[[-0.77362,  1.25407,  1.48055, -3.78015,  0.30853, -2.02113,  4.59196, -2.29144,  1.17197,  3.65759,  0.15856,  1.28429, -0.20985,  0.50889, -4.36629,  0.53420],
         [-1.62500,  2.41437,  0.81063, -2.81029,  1.29302, -1.05275,  2.28254, -0.23948, -2.10759,  3.75199, -1.65321,  0.66820,  0.24850, -0.44554, -3.70179,  1.34123]]], device='cuda:0')

T: out1 (after linear_1) -> torch.Size([1, 2, 16])
tensor([[[0.00000, 1.25407, 1.48055, 0.00000, 0.30853, 0.00000, 4.59196, 0.00000, 1.17197, 3.65759, 0.15856, 1.28429, 0.00000, 0.50889, 0.00000, 0.53420],
         [0.00000, 2.41437, 0.81063, 0.00000, 1.29302, 0.00000, 2.28254, 0.00000, 0.00000, 3.75199, 0.00000, 0.66820, 0.24850, 0.00000, 0.00000, 1.34123]]], device='cuda:0')

T: out2 (after linear_2) -> torch.Size([1, 2, 32])
tensor([[[ -7.17516,  -1.56966,   0.62080,  -0.55705,  -0.10489,   0.16447,   0.82441, -12.73428, -10.36778,  -4.59773,   2.35795,   1.04825,   1.12652,   0.40483,  -0.20719,  -0.51555,  -3.62667,   0.48201,  -2.54849,  -0.59706,  -1.49410,  -8.73253,  -1.18558,  -0.92413,   0.95431,   2.60272,   0.34002,   0.20866,  -0.49877,  -3.08447,   0.50114,  -1.12242],
         [ -4.53629,  -1.42334,   0.23137,  -0.91261,  -0.86491,  -0.09974,   1.06118,  -7.86645,  -7.22019,  -4.54046,   1.80994,   0.27527,   1.17113,  -1.00656,  -1.60439,  -0.36586,  -3.23920,  -0.54674,  -1.91722,  -0.64163,  -3.82602,  -6.39011,   0.49320,  -0.66394,  -0.30429,   2.82996,  -0.09370,  -0.29357,  -0.65419,  -1.42839,  -0.44858,  -2.27162]]], device='cuda:0')

T: out4 (after linear_4) -> torch.Size([1, 2, 32])
tensor([[[0.00000, 0.00000, 0.62080, 0.00000, 0.00000, 0.16447, 0.82441, 0.00000, 0.00000, 0.00000, 2.35795, 1.04825, 1.12652, 0.40483, 0.00000, 0.00000, 0.00000, 0.48201, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.95431, 2.60272, 0.34002, 0.20866, 0.00000, 0.00000, 0.50114, 0.00000],
         [0.00000, 0.00000, 0.23137, 0.00000, 0.00000, 0.00000, 1.06118, 0.00000, 0.00000, 0.00000, 1.80994, 0.27527, 1.17113, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.49320, 0.00000, 0.00000, 2.82996, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000]]], device='cuda:0')

T: out5 (after linear_5) -> torch.Size([1, 2, 16])
tensor([[[ 0.66466, -1.65541, -1.13102,  2.02463,  0.05015,  2.59700, -1.65752,  0.88516, -0.07036, -1.56882, -0.84934, -1.23691, -1.38495, -0.93748,  3.25064,  1.15316],
         [ 0.47646, -1.25088, -0.48846,  1.58696, -0.34941,  2.18664, -1.34497,  0.86624,  0.18655, -1.15457, -0.99557, -0.56543, -0.92693, -0.75770,  2.37092,  1.01626]]], device='cuda:0')

T: out (after x + out) -> torch.Size([1, 2, 16])
tensor([[[-0.10896, -0.40134,  0.34953, -1.75552,  0.35868,  0.57587,  2.93444, -1.40628,  1.10160,  2.08877, -0.69078,  0.04738, -1.59480, -0.42859, -1.11565,  1.68736],
         [-1.14854,  1.16349,  0.32217, -1.22333,  0.94361,  1.13388,  0.93757,  0.62676, -1.92105,  2.59742, -2.64878,  0.10277, -0.67844, -1.20324, -1.33086,  2.35748]]], device='cuda:0')

T: out (after dropout) -> torch.Size([1, 2, 16])
tensor([[[-0.10896, -0.40134,  0.34953, -1.75552,  0.35868,  0.57587,  2.93444, -1.40628,  1.10160,  2.08877, -0.69078,  0.04738, -1.59480, -0.42859, -1.11565,  1.68736],
         [-1.14854,  1.16349,  0.32217, -1.22333,  0.94361,  1.13388,  0.93757,  0.62676, -1.92105,  2.59742, -2.64878,  0.10277, -0.67844, -1.20324, -1.33086,  2.35748]]], device='cuda:0')

out (after transformer layer) -> torch.Size([1, 2, 16])
tensor([[[-0.10896, -0.40134,  0.34953, -1.75552,  0.35868,  0.57587,  2.93444, -1.40628,  1.10160,  2.08877, -0.69078,  0.04738, -1.59480, -0.42859, -1.11565,  1.68736],
         [-1.14854,  1.16349,  0.32217, -1.22333,  0.94361,  1.13388,  0.93757,  0.62676, -1.92105,  2.59742, -2.64878,  0.10277, -0.67844, -1.20324, -1.33086,  2.35748]]], device='cuda:0')

out (after out[:, 0]) -> torch.Size([1, 16])
tensor([[-0.10896, -0.40134,  0.34953, -1.75552,  0.35868,  0.57587,  2.93444, -1.40628,  1.10160,  2.08877, -0.69078,  0.04738, -1.59480, -0.42859, -1.11565,  1.68736]], device='cuda:0')

out (after out layer 1) -> torch.Size([1, 5])
tensor([[ 0.98281,  0.64183, -2.40454, -1.07556, -1.24963]], device='cuda:0')

out (after squeeze()) -> torch.Size([1, 5])
tensor([[ 0.98281,  0.64183, -2.40454, -1.07556, -1.24963]], device='cuda:0')

final_result (softmax) -> torch.Size([1, 5])
tensor([[-0.68299, -1.02398, -4.07035, -2.74137, -2.91544]], device='cuda:0')
Predictions:
-0.6829920411109924 -1.023979902267456 -4.070346355438232 -2.741365432739258 -2.915440082550049
